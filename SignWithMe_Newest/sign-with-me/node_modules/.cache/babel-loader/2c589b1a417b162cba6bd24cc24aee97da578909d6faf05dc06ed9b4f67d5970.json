{"ast":null,"code":"var _jsxFileName = \"/Users/brandonboston/Desktop/SignWithMe_Newest/SignWithMe_Newest/sign-with-me/src/components/Number_Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Number_Quiz.css';\n\n// Importing images statically for use in dynamic mapping\nimport number0 from '../Letters/number00.png';\nimport number1 from '../Letters/number01.png';\nimport number2 from '../Letters/number02.png';\nimport number3 from '../Letters/number03.png';\nimport number4 from '../Letters/number04.png';\nimport number5 from '../Letters/number05.png';\nimport number6 from '../Letters/number06.png';\nimport number7 from '../Letters/number07.png';\nimport number8 from '../Letters/number08.png';\nimport number9 from '../Letters/number09.png';\nimport number10 from '../Letters/number10.gif';\n\n// Map of numbers to images\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst numberImages = {\n  0: number0,\n  1: number1,\n  2: number2,\n  3: number3,\n  4: number4,\n  5: number5,\n  6: number6,\n  7: number7,\n  8: number8,\n  9: number9,\n  10: number10\n};\nconst Number_Quiz = () => {\n  _s();\n  const [feedback, setFeedback] = useState('');\n  const [feedbackColor, setFeedbackColor] = useState(''); // to store feedback color\n  const [matchedCount, setMatchedCount] = useState(0);\n  const [randomNumbers, setRandomNumbers] = useState([]); // stores random numbers\n  const totalMatches = 5;\n  useEffect(() => {\n    // Generate 5 unique random numbers between 0 and 10\n    const generateRandomNumbers = () => {\n      const numbers = new Set();\n      while (numbers.size < 5) {\n        numbers.add(Math.floor(Math.random() * 11));\n      }\n      setRandomNumbers([...numbers]);\n    };\n    generateRandomNumbers();\n  }, []);\n  const handleDrop = (event, number) => {\n    event.preventDefault();\n    const draggedNumber = event.dataTransfer.getData(\"text/plain\");\n    if (draggedNumber === number.toString()) {\n      setMatchedCount(prev => prev + 1);\n      setFeedback('Correct!');\n      setFeedbackColor('green'); // Set color to green for correct\n    } else {\n      setFeedback('Incorrect number dropped! Try again.');\n      setFeedbackColor('red'); // Set color to red for incorrect\n    }\n    if (matchedCount + 1 === totalMatches && draggedNumber === number.toString()) {\n      setFeedback('Well done! You matched all the numbers correctly!');\n      setFeedbackColor('green');\n    }\n  };\n  const handleDragStart = event => {\n    event.dataTransfer.setData(\"text/plain\", event.target.id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"number-quiz-container\",\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"asl-quiz-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"quiz-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            color: 'white'\n          },\n          className: \"quiz-title\",\n          children: \"ASL Number Matching Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'white'\n          },\n          className: \"quiz-description\",\n          children: \"Match the regular numbers to the correct ASL signs!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"learn-button\",\n          onClick: () => window.location.href = '/units/lesson7',\n          children: \"Learn ASL Numbers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"matching-quiz-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"instructions\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"instruction-text\",\n            children: \"Drag and drop each number to its corresponding ASL number card.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"matching-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"number-list\",\n            children: randomNumbers.map(num => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"draggable-number\",\n              id: num.toString(),\n              draggable: \"true\",\n              onDragStart: handleDragStart,\n              children: num\n            }, num, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"asl-signs\",\n            children: randomNumbers.map(num => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"asl-dropzone\",\n              onDrop: e => handleDrop(e, num),\n              onDragOver: e => e.preventDefault(),\n              \"data-match\": num,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"asl-image\",\n                src: numberImages[num],\n                alt: `ASL Sign for ${num}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 37\n              }, this)\n            }, num, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), feedback && /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"feedback_Number\",\n          className: `feedback-message ${feedbackColor}`,\n          children: feedback\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n_s(Number_Quiz, \"xkHtocTOHM11wGSBPcJPcO6sf3s=\");\n_c = Number_Quiz;\nexport default Number_Quiz;\nvar _c;\n$RefreshReg$(_c, \"Number_Quiz\");","map":{"version":3,"names":["React","useState","useEffect","number0","number1","number2","number3","number4","number5","number6","number7","number8","number9","number10","jsxDEV","_jsxDEV","numberImages","Number_Quiz","_s","feedback","setFeedback","feedbackColor","setFeedbackColor","matchedCount","setMatchedCount","randomNumbers","setRandomNumbers","totalMatches","generateRandomNumbers","numbers","Set","size","add","Math","floor","random","handleDrop","event","number","preventDefault","draggedNumber","dataTransfer","getData","toString","prev","handleDragStart","setData","target","id","className","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","location","href","map","num","draggable","onDragStart","onDrop","e","onDragOver","src","alt","_c","$RefreshReg$"],"sources":["/Users/brandonboston/Desktop/SignWithMe_Newest/SignWithMe_Newest/sign-with-me/src/components/Number_Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Number_Quiz.css';\n\n// Importing images statically for use in dynamic mapping\nimport number0 from '../Letters/number00.png';\nimport number1 from '../Letters/number01.png';\nimport number2 from '../Letters/number02.png';\nimport number3 from '../Letters/number03.png';\nimport number4 from '../Letters/number04.png';\nimport number5 from '../Letters/number05.png';\nimport number6 from '../Letters/number06.png';\nimport number7 from '../Letters/number07.png';\nimport number8 from '../Letters/number08.png';\nimport number9 from '../Letters/number09.png';\nimport number10 from '../Letters/number10.gif';\n\n// Map of numbers to images\nconst numberImages = {\n    0: number0,\n    1: number1,\n    2: number2,\n    3: number3,\n    4: number4,\n    5: number5,\n    6: number6,\n    7: number7,\n    8: number8,\n    9: number9,\n    10: number10,\n};\n\nconst Number_Quiz = () => {\n    const [feedback, setFeedback] = useState('');\n    const [feedbackColor, setFeedbackColor] = useState(''); // to store feedback color\n    const [matchedCount, setMatchedCount] = useState(0);\n    const [randomNumbers, setRandomNumbers] = useState([]); // stores random numbers\n    const totalMatches = 5;\n\n    useEffect(() => {\n        // Generate 5 unique random numbers between 0 and 10\n        const generateRandomNumbers = () => {\n            const numbers = new Set();\n            while (numbers.size < 5) {\n                numbers.add(Math.floor(Math.random() * 11));\n            }\n            setRandomNumbers([...numbers]);\n        };\n\n        generateRandomNumbers();\n    }, []);\n\n    const handleDrop = (event, number) => {\n        event.preventDefault();\n        const draggedNumber = event.dataTransfer.getData(\"text/plain\");\n\n        if (draggedNumber === number.toString()) {\n            setMatchedCount((prev) => prev + 1);\n            setFeedback('Correct!');\n            setFeedbackColor('green'); // Set color to green for correct\n        } else {\n            setFeedback('Incorrect number dropped! Try again.');\n            setFeedbackColor('red'); // Set color to red for incorrect\n        }\n\n        if (matchedCount + 1 === totalMatches && draggedNumber === number.toString()) {\n            setFeedback('Well done! You matched all the numbers correctly!');\n            setFeedbackColor('green');\n        }\n    };\n\n    const handleDragStart = (event) => {\n        event.dataTransfer.setData(\"text/plain\", event.target.id);\n    };\n\n    return (\n        <div className=\"number-quiz-container\">\n            {/* ASL Number Matching Quiz Section */}\n            <section className=\"asl-quiz-section\">\n                <header className=\"quiz-header\">\n                    <h1 style={{color:'white'}} className=\"quiz-title\">ASL Number Matching Quiz</h1>\n                    <p style={{color:'white'}} className=\"quiz-description\">Match the regular numbers to the correct ASL signs!</p>\n                    <button className=\"learn-button\" onClick={() => window.location.href='/units/lesson7'}>Learn ASL Numbers</button>\n                </header>\n\n                <section className=\"matching-quiz-section\">\n                    <div className=\"instructions\">\n                        <p className=\"instruction-text\">Drag and drop each number to its corresponding ASL number card.</p>\n                    </div>\n\n                    <div className=\"matching-container\">\n                        {/* Numbers */}\n                        <div className=\"number-list\">\n                            {randomNumbers.map(num => (\n                                <div\n                                    key={num}\n                                    className=\"draggable-number\"\n                                    id={num.toString()}\n                                    draggable=\"true\"\n                                    onDragStart={handleDragStart}\n                                >\n                                    {num}\n                                </div>\n                            ))}\n                        </div>\n\n                        {/* ASL Signs */}\n                        <div className=\"asl-signs\">\n                            {randomNumbers.map(num => (\n                                <div\n                                    key={num}\n                                    className=\"asl-dropzone\"\n                                    onDrop={(e) => handleDrop(e, num)}\n                                    onDragOver={(e) => e.preventDefault()}\n                                    data-match={num}\n                                >\n                                    <img className=\"asl-image\" src={numberImages[num]} alt={`ASL Sign for ${num}`} />\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n\n                    {/* Feedback */}\n                    {feedback && (\n                        <div id=\"feedback_Number\" className={`feedback-message ${feedbackColor}`}>\n                            {feedback}\n                        </div>\n                    )}\n                </section>\n            </section>\n        </div>\n    );\n};\n\nexport default Number_Quiz;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}