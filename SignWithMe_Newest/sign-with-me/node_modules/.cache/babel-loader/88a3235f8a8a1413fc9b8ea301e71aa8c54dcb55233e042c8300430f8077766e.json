{"ast":null,"code":"var _jsxFileName = \"/Users/brandonboston/Desktop/SignWithMe/SignWithMe_Newest/sign-with-me/src/components/Translator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Translator.css\";\nimport Navbar from \"./Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Translator = () => {\n  _s();\n  const [inputText, setInputText] = useState(\"\");\n  const [outputSign, setOutputSign] = useState(\"\");\n  const handleTranslate = () => {\n    // Replace this with actual translation logic\n    // For now, we'll just show the input text as a placeholder\n    setOutputSign(`Sign for: ${inputText}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"translator-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sign Language Translator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"input-box\",\n      placeholder: \"Enter text to translate...\",\n      value: inputText,\n      onChange: e => setInputText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"translate-button\",\n      onClick: handleTranslate,\n      children: \"Translate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"output-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Output Sign:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: outputSign\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(Translator, \"o9Fx9gZLIfw4KkDdOhe7c7YIJqo=\");\n_c = Translator;\nexport default Translator;\nvar _c;\n$RefreshReg$(_c, \"Translator\");","map":{"version":3,"names":["React","useState","Navbar","jsxDEV","_jsxDEV","Translator","_s","inputText","setInputText","outputSign","setOutputSign","handleTranslate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/brandonboston/Desktop/SignWithMe/SignWithMe_Newest/sign-with-me/src/components/Translator.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./Translator.css\";\nimport Navbar from \"./Navbar\";\n\nconst Translator = () => {\n  const [inputText, setInputText] = useState(\"\");\n  const [outputSign, setOutputSign] = useState(\"\");\n\n  const handleTranslate = () => {\n    // Replace this with actual translation logic\n    // For now, we'll just show the input text as a placeholder\n    setOutputSign(`Sign for: ${inputText}`);\n  };\n\n  return (\n    <div className=\"translator-container\">\n      <h1>Sign Language Translator</h1>\n      <textarea\n        className=\"input-box\"\n        placeholder=\"Enter text to translate...\"\n        value={inputText}\n        onChange={(e) => setInputText(e.target.value)}\n      />\n      <button className=\"translate-button\" onClick={handleTranslate}>\n        Translate\n      </button>\n      <div className=\"output-box\">\n        <h2>Output Sign:</h2>\n        <p>{outputSign}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Translator;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,kBAAkB;AACzB,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMU,eAAe,GAAGA,CAAA,KAAM;IAC5B;IACA;IACAD,aAAa,CAAC,aAAaH,SAAS,EAAE,CAAC;EACzC,CAAC;EAED,oBACEH,OAAA;IAAKQ,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACnCT,OAAA;MAAAS,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjCb,OAAA;MACEQ,SAAS,EAAC,WAAW;MACrBM,WAAW,EAAC,4BAA4B;MACxCC,KAAK,EAAEZ,SAAU;MACjBa,QAAQ,EAAGC,CAAC,IAAKb,YAAY,CAACa,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC,eACFb,OAAA;MAAQQ,SAAS,EAAC,kBAAkB;MAACW,OAAO,EAAEZ,eAAgB;MAAAE,QAAA,EAAC;IAE/D;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTb,OAAA;MAAKQ,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBT,OAAA;QAAAS,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrBb,OAAA;QAAAS,QAAA,EAAIJ;MAAU;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACX,EAAA,CA5BID,UAAU;AAAAmB,EAAA,GAAVnB,UAAU;AA8BhB,eAAeA,UAAU;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}