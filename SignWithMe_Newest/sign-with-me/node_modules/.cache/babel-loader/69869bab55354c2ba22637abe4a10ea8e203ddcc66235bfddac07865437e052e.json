{"ast":null,"code":"var _jsxFileName = \"/Users/brandonboston/Desktop/SignWithMe_Newest/SignWithMe_Newest/sign-with-me/src/components/Alphabet_Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\n// import imageA from \"../Letters/ASLAlphabetPoster_A.webp.png\";\n// import imageB from \"../Letters/ASLAlphabetPoster_B.webp.png\";\nimport imageA from \"../Letters/A_Cropped.png\";\nimport imageB from \"../Letters/B_Cropped.png\";\nimport imageC from \"../Letters/ASLAlphabetPoster_C.webp.png\";\nimport imageD from \"../Letters/ASLAlphabetPoster_D.webp.png\";\nimport imageCAT from \"../Letters/ASL_CAT.webp\";\nimport imageDOG from \"../Letters/ASL_DOG1.webp\";\nimport imageBEE from \"../Letters/ASL_BEE.webp\";\nimport imageANT from \"../Letters/ASL_ANT.webp\";\nimport \"./Alphabet_Quiz.css\";\nimport QuizCompletion from \"./quizCompletion\"; // Make sure to create this component\nimport Navbar from \"./Navbar\";\nimport axios from \"axios\"; // Import axios for making HTTP requests\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Quiz() {\n  _s();\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [isLevel1, setIsLevel1] = useState(true);\n  const [level1Score, setLevel1Score] = useState(0);\n  const [level2Score, setLevel2Score] = useState(0);\n  const [currentData, setCurrentData] = useState([]);\n  const [feedback, setFeedback] = useState(\"\");\n  const [quizCompleted, setQuizCompleted] = useState(false);\n  const level1Data = [{\n    question: \"Select the letter this sign represents.\",\n    image: imageA,\n    choices: [\"A\", \"B\", \"C\", \"D\"],\n    correct: \"A\"\n  }, {\n    question: \"Select the letter this sign represents.\",\n    image: imageB,\n    choices: [\"A\", \"B\", \"C\", \"D\"],\n    correct: \"B\"\n  }];\n  const level2Data = [{\n    question: \"Spell the word 'DOG'.\",\n    choices: [imageDOG, imageCAT, imageBEE, imageANT],\n    correct: imageDOG\n  }, {\n    question: \"Spell the word 'CAT'.\",\n    choices: [imageDOG, imageCAT, imageBEE, imageANT],\n    correct: imageCAT\n  }];\n  useEffect(() => {\n    setCurrentData(isLevel1 ? level1Data : level2Data);\n    setCurrentQuestionIndex(0);\n    setFeedback(\"\");\n  }, [isLevel1]);\n  const handleAnswerChange = selected => {\n    const currentQuestion = currentData[currentQuestionIndex];\n    if (selected === currentQuestion.correct) {\n      if (isLevel1) {\n        setLevel1Score(prevScore => prevScore + 1);\n      } else {\n        setLevel2Score(prevScore => prevScore + 1);\n      }\n      setFeedback(\"Correct!\");\n    } else {\n      setFeedback(`Incorrect! The correct answer was ${currentQuestion.correct}.`);\n    }\n    const nextIndex = currentQuestionIndex + 1;\n    if (nextIndex < currentData.length) {\n      setTimeout(() => {\n        setCurrentQuestionIndex(nextIndex);\n        setFeedback(\"\");\n      }, 1000);\n    } else {\n      if (!isLevel1) {\n        // Quiz is completed\n        setQuizCompleted(true);\n      } else {\n        console.log(\"Level 1 finished\");\n      }\n    }\n  };\n  const handleNextLevel = () => {\n    setIsLevel1(false);\n  };\n\n  // Function to send an API request to update the lesson in the DB\n  const updateLessonQuizCompletion = async totalScore => {\n    try {\n      const userName = localStorage.getItem(\"userName\"); // Fetch logged-in user's username from localStorage\n      const lessonId = \"101\"; // The lesson to check and update\n      if (totalScore === 4) {\n        await axios.put(\"http://localhost:5001/api/lessons/update-lesson\", {\n          lessonId: lessonId,\n          userName: userName,\n          quiz_complete: true\n        });\n        console.log(\"Lesson updated successfully!\");\n      }\n    } catch (error) {\n      console.error(\"Error updating lesson:\", error);\n    }\n  };\n  if (quizCompleted) {\n    const totalScore = level1Score + level2Score;\n    updateLessonQuizCompletion(totalScore); // Update the lesson if score is 4\n    return /*#__PURE__*/_jsxDEV(QuizCompletion, {\n      score: totalScore,\n      totalQuestions: level1Data.length + level2Data.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this);\n  }\n  if (!currentData.length || !currentData[currentQuestionIndex]) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 12\n    }, this);\n  }\n  const currentQuestion = currentData[currentQuestionIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Main_Div\",\n    style: {\n      paddingLeft: \"15%\",\n      maxWidth: \"600px\",\n      margin: \"0 auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        paddingRight: \"30%\"\n      },\n      children: \"ASL Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        paddingLeft: \"2%\",\n        fontSize: \"25px\"\n      },\n      children: currentQuestion.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), currentQuestion.image && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: currentQuestion.image,\n      alt: \"ASL Sign\",\n      style: {\n        maxWidth: \"100%\",\n        height: \"auto\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingLeft: \"10%\",\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        gap: \"10px\",\n        marginTop: \"20px\"\n      },\n      children: currentQuestion.choices.map((choice, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAnswerChange(choice),\n        style: {\n          padding: \"10px\",\n          fontSize: \"16px\",\n          cursor: \"pointer\"\n        },\n        children: isLevel1 ? choice : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: choice,\n          alt: \"ASL Choice\",\n          style: {\n            width: \"250px\",\n            height: \"100px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), feedback && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\",\n        fontSize: \"18px\",\n        fontWeight: \"bold\",\n        color: \"#177d17\"\n      },\n      children: feedback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'block'\n      },\n      children: currentQuestionIndex < currentData.length - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentQuestionIndex(currentQuestionIndex + 1),\n        style: {\n          marginLeft: \"21%\",\n          marginTop: \"20px\",\n          position: 'fixed'\n        },\n        children: \"Next Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), isLevel1 && currentQuestionIndex === level1Data.length - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNextLevel,\n      style: {\n        marginTop: \"20px\"\n      },\n      children: \"Next Level\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\",\n        paddingLeft: \"20%\",\n        fontSize: \"25px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\"Total Score: \", level1Score + level2Score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n}\n_s(Quiz, \"hKur42g7kpukd9rqfl7FVEqTFu8=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","imageA","imageB","imageC","imageD","imageCAT","imageDOG","imageBEE","imageANT","QuizCompletion","Navbar","axios","jsxDEV","_jsxDEV","Quiz","_s","currentQuestionIndex","setCurrentQuestionIndex","isLevel1","setIsLevel1","level1Score","setLevel1Score","level2Score","setLevel2Score","currentData","setCurrentData","feedback","setFeedback","quizCompleted","setQuizCompleted","level1Data","question","image","choices","correct","level2Data","handleAnswerChange","selected","currentQuestion","prevScore","nextIndex","length","setTimeout","console","log","handleNextLevel","updateLessonQuizCompletion","totalScore","userName","localStorage","getItem","lessonId","put","quiz_complete","error","score","totalQuestions","fileName","_jsxFileName","lineNumber","columnNumber","children","className","style","paddingLeft","maxWidth","margin","paddingRight","fontSize","src","alt","height","display","flexWrap","gap","marginTop","map","choice","index","onClick","padding","cursor","width","fontWeight","color","marginLeft","position","_c","$RefreshReg$"],"sources":["/Users/brandonboston/Desktop/SignWithMe_Newest/SignWithMe_Newest/sign-with-me/src/components/Alphabet_Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n// import imageA from \"../Letters/ASLAlphabetPoster_A.webp.png\";\r\n// import imageB from \"../Letters/ASLAlphabetPoster_B.webp.png\";\r\nimport imageA from \"../Letters/A_Cropped.png\";\r\nimport imageB from \"../Letters/B_Cropped.png\";\r\n\r\nimport imageC from \"../Letters/ASLAlphabetPoster_C.webp.png\";\r\nimport imageD from \"../Letters/ASLAlphabetPoster_D.webp.png\";\r\nimport imageCAT from \"../Letters/ASL_CAT.webp\";\r\nimport imageDOG from \"../Letters/ASL_DOG1.webp\";\r\nimport imageBEE from \"../Letters/ASL_BEE.webp\";\r\nimport imageANT from \"../Letters/ASL_ANT.webp\";\r\nimport \"./Alphabet_Quiz.css\";\r\nimport QuizCompletion from \"./quizCompletion\"; // Make sure to create this component\r\nimport Navbar from \"./Navbar\";\r\nimport axios from \"axios\"; // Import axios for making HTTP requests\r\n\r\nfunction Quiz() {\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [isLevel1, setIsLevel1] = useState(true);\r\n  const [level1Score, setLevel1Score] = useState(0);\r\n  const [level2Score, setLevel2Score] = useState(0);\r\n  const [currentData, setCurrentData] = useState([]);\r\n  const [feedback, setFeedback] = useState(\"\");\r\n  const [quizCompleted, setQuizCompleted] = useState(false);\r\n\r\n  const level1Data = [\r\n    {\r\n      question: \"Select the letter this sign represents.\",\r\n      image: imageA,\r\n      choices: [\"A\", \"B\", \"C\", \"D\"],\r\n      correct: \"A\",\r\n    },\r\n    {\r\n      question: \"Select the letter this sign represents.\",\r\n      image: imageB,\r\n      choices: [\"A\", \"B\", \"C\", \"D\"],\r\n      correct: \"B\",\r\n    },\r\n  ];\r\n\r\n  const level2Data = [\r\n    {\r\n      question: \"Spell the word 'DOG'.\",\r\n      choices: [imageDOG, imageCAT, imageBEE, imageANT],\r\n      correct: imageDOG,\r\n    },\r\n    {\r\n      question: \"Spell the word 'CAT'.\",\r\n      choices: [imageDOG, imageCAT, imageBEE, imageANT],\r\n      correct: imageCAT,\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    setCurrentData(isLevel1 ? level1Data : level2Data);\r\n    setCurrentQuestionIndex(0);\r\n    setFeedback(\"\");\r\n  }, [isLevel1]);\r\n\r\n  const handleAnswerChange = (selected) => {\r\n    const currentQuestion = currentData[currentQuestionIndex];\r\n    if (selected === currentQuestion.correct) {\r\n      if (isLevel1) {\r\n        setLevel1Score((prevScore) => prevScore + 1);\r\n      } else {\r\n        setLevel2Score((prevScore) => prevScore + 1);\r\n      }\r\n      setFeedback(\"Correct!\");\r\n    } else {\r\n      setFeedback(\r\n        `Incorrect! The correct answer was ${currentQuestion.correct}.`\r\n      );\r\n    }\r\n\r\n    const nextIndex = currentQuestionIndex + 1;\r\n    if (nextIndex < currentData.length) {\r\n      setTimeout(() => {\r\n        setCurrentQuestionIndex(nextIndex);\r\n        setFeedback(\"\");\r\n      }, 1000);\r\n    } else {\r\n      if (!isLevel1) {\r\n        // Quiz is completed\r\n        setQuizCompleted(true);\r\n      } else {\r\n        console.log(\"Level 1 finished\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleNextLevel = () => {\r\n    setIsLevel1(false);\r\n  };\r\n\r\n  // Function to send an API request to update the lesson in the DB\r\n  const updateLessonQuizCompletion = async (totalScore) => {\r\n    try {\r\n      const userName = localStorage.getItem(\"userName\"); // Fetch logged-in user's username from localStorage\r\n      const lessonId = \"101\"; // The lesson to check and update\r\n      if (totalScore === 4) {\r\n        await axios.put(\"http://localhost:5001/api/lessons/update-lesson\", {\r\n          lessonId: lessonId,\r\n          userName: userName,\r\n          quiz_complete: true,\r\n        });\r\n        console.log(\"Lesson updated successfully!\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating lesson:\", error);\r\n    }\r\n  };\r\n\r\n  if (quizCompleted) {\r\n    const totalScore = level1Score + level2Score;\r\n    updateLessonQuizCompletion(totalScore); // Update the lesson if score is 4\r\n    return (\r\n      <QuizCompletion\r\n        score={totalScore}\r\n        totalQuestions={level1Data.length + level2Data.length}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (!currentData.length || !currentData[currentQuestionIndex]) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  const currentQuestion = currentData[currentQuestionIndex];\r\n\r\n  return (\r\n    <div\r\n      className=\"Main_Div\"\r\n      style={{ paddingLeft: \"15%\", maxWidth: \"600px\", margin: \"0 auto\" }}\r\n    >\r\n      <h1 style={{ paddingRight: \"30%\" }}>ASL Quiz</h1>\r\n      <p style={{ paddingLeft: \"2%\", fontSize: \"25px\" }}>\r\n        {currentQuestion.question}\r\n      </p>\r\n      {currentQuestion.image && (\r\n        <img\r\n          src={currentQuestion.image}\r\n          alt=\"ASL Sign\"\r\n          style={{ maxWidth: \"100%\", height: \"auto\" }}\r\n        />\r\n      )}\r\n\r\n      <div\r\n        style={{\r\n          paddingLeft: \"10%\",\r\n          display: \"flex\",\r\n          flexWrap: \"wrap\",\r\n          gap: \"10px\",\r\n          marginTop: \"20px\",\r\n        }}\r\n      >\r\n        {currentQuestion.choices.map((choice, index) => (\r\n          <button\r\n            key={index}\r\n            onClick={() => handleAnswerChange(choice)}\r\n            style={{ padding: \"10px\", fontSize: \"16px\", cursor: \"pointer\" }}\r\n          >\r\n            {isLevel1 ? (\r\n              choice\r\n            ) : (\r\n              <img\r\n                src={choice}\r\n                alt=\"ASL Choice\"\r\n                style={{ width: \"250px\", height: \"100px\" }}\r\n              />\r\n            )}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      {feedback && (\r\n        <div\r\n          style={{\r\n            marginTop: \"20px\",\r\n            fontSize: \"18px\",\r\n            fontWeight: \"bold\",\r\n            color: \"#177d17\",\r\n          }}\r\n        >\r\n          {feedback}\r\n        </div>\r\n      )}\r\n      <div style={{display:'block'}}>\r\n      {currentQuestionIndex < currentData.length - 1 && (\r\n        <button\r\n          onClick={() => setCurrentQuestionIndex(currentQuestionIndex + 1)}\r\n          style={{ marginLeft: \"21%\", marginTop: \"20px\", position:'fixed' }}\r\n        >\r\n          Next Question\r\n        </button>\r\n      )}\r\n      </div>\r\n\r\n      {isLevel1 && currentQuestionIndex === level1Data.length - 1 && (\r\n        <button onClick={handleNextLevel} style={{ marginTop: \"20px\" }}>\r\n          Next Level\r\n        </button>\r\n      )}\r\n\r\n      <div style={{ marginTop: \"20px\", paddingLeft: \"20%\", fontSize: \"25px\" }}>\r\n        <strong>Total Score: {level1Score + level2Score}</strong>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Quiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}