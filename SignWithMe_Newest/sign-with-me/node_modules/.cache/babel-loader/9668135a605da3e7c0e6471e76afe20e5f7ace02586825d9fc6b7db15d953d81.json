{"ast":null,"code":"var _jsxFileName = \"/Users/brandonboston/Desktop/SignWithMe_Newest/SignWithMe-11-22-2024/sign-with-me/src/components/Alphabet_Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\n// import imageA from \"../Letters/ASLAlphabetPoster_A.webp.png\";\n// import imageB from \"../Letters/ASLAlphabetPoster_B.webp.png\";\nimport imageA from \"../Letters/A_Cropped.png\";\nimport imageB from \"../Letters/B_Cropped.png\";\nimport imageC from \"../Letters/C_Cropped.png\";\nimport imageD from \"../Letters/D_Cropped.png\";\nimport imageE from \"../Letters/E_Cropped.png\";\nimport imageF from \"../Letters/F_Cropped.png\";\nimport imageG from \"../Letters/G_Cropped.png\";\nimport imageH from \"../Letters/H_Cropped.png\";\nimport imageI from \"../Letters/I_Cropped.png\";\nimport imageJ from \"../Letters/J_Cropped.png\";\nimport imageK from \"../Letters/K_Cropped.png\";\nimport imageL from \"../Letters/L_Cropped.png\";\nimport imageM from \"../Letters/M_Cropped.png\";\nimport imageN from \"../Letters/N_Cropped.png\";\nimport imageO from \"../Letters/O_Cropped.png\";\nimport imageP from \"../Letters/P_Cropped.png\";\nimport imageQ from \"../Letters/Q_Cropped.png\";\nimport imageR from \"../Letters/R_Cropped.png\";\nimport imageS from \"../Letters/S_Cropped.png\";\nimport imageT from \"../Letters/T_Cropped.png\";\nimport imageU from \"../Letters/U_Cropped.png\";\nimport imageV from \"../Letters/V_Cropped.png\";\nimport imageW from \"../Letters/W_Cropped.png\";\nimport imageX from \"../Letters/X_Cropped.png\";\nimport imageY from \"../Letters/Y_Cropped.png\";\nimport imageZ from \"../Letters/Z_Cropped.png\";\nimport imageCAT from \"../Letters/ASL_CAT_Cropped.png\";\nimport imageDOG from \"../Letters/ASL_DOG_Cropped.png\";\nimport imageBEE from \"../Letters/ASL_BEE_Cropped.png\";\nimport imageANT from \"../Letters/ASL_ANT_Cropped.png\";\nimport \"./Alphabet_Quiz.css\";\nimport QuizCompletion from \"./quizCompletion\"; // Make sure to create this component\nimport Navbar from \"./Navbar\";\nimport axios from \"axios\"; // Import axios for making HTTP requests\n\n// Example of all letter images for Level 1\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst allLevel1Images = [{\n  image: imageA,\n  letter: \"A\"\n}, {\n  image: imageB,\n  letter: \"B\"\n}, {\n  image: imageC,\n  letter: \"C\"\n}, {\n  image: imageD,\n  letter: \"D\"\n}, {\n  image: imageE,\n  letter: \"E\"\n}, {\n  image: imageF,\n  letter: \"F\"\n}, {\n  image: imageG,\n  letter: \"G\"\n}, {\n  image: imageH,\n  letter: \"H\"\n}, {\n  image: imageI,\n  letter: \"I\"\n}, {\n  image: imageJ,\n  letter: \"J\"\n}, {\n  image: imageK,\n  letter: \"K\"\n}, {\n  image: imageL,\n  letter: \"L\"\n}, {\n  image: imageM,\n  letter: \"M\"\n}, {\n  image: imageN,\n  letter: \"N\"\n}, {\n  image: imageO,\n  letter: \"O\"\n}, {\n  image: imageP,\n  letter: \"P\"\n}, {\n  image: imageQ,\n  letter: \"Q\"\n}, {\n  image: imageR,\n  letter: \"R\"\n}, {\n  image: imageS,\n  letter: \"S\"\n}, {\n  image: imageT,\n  letter: \"T\"\n}, {\n  image: imageU,\n  letter: \"U\"\n}, {\n  image: imageV,\n  letter: \"V\"\n}, {\n  image: imageW,\n  letter: \"W\"\n}, {\n  image: imageX,\n  letter: \"X\"\n}, {\n  image: imageY,\n  letter: \"Y\"\n}, {\n  image: imageZ,\n  letter: \"Z\"\n}];\n\n// Helper function to get random unique items from an array\nconst getRandomLetters = array => {\n  const shuffledArray = array.sort(() => 0.5 - Math.random()); // Shuffle array\n  return shuffledArray.slice(0, 2); // Pick first two\n};\n\n// Function to randomize the choices and set the data for the current question\nconst getLevel1Question = () => {\n  const [firstLetter, secondLetter] = getRandomLetters(allLevel1Images);\n  const correctAnswer = firstLetter;\n  const wrongAnswers = [secondLetter];\n\n  // Get two other wrong answers (you can randomize these as well)\n  while (wrongAnswers.length < 3) {\n    const randomLetter = getRandomLetters(allLevel1Images)[0];\n    if (!wrongAnswers.includes(randomLetter)) {\n      wrongAnswers.push(randomLetter);\n    }\n  }\n\n  // Randomize the answers array so the correct answer isn't always in the same position\n  const choices = [correctAnswer, ...wrongAnswers].sort(() => Math.random() - 0.5);\n  return {\n    question: \"Select the letter this sign represents.\",\n    image: correctAnswer.image,\n    choices: choices.map(choice => choice.letter),\n    correct: correctAnswer.letter\n  };\n};\nfunction Quiz() {\n  _s();\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [isLevel1, setIsLevel1] = useState(true);\n  const [level1Score, setLevel1Score] = useState(0);\n  const [level2Score, setLevel2Score] = useState(0);\n  const [currentData, setCurrentData] = useState([]);\n  const [feedback, setFeedback] = useState(\"\");\n  const [quizCompleted, setQuizCompleted] = useState(false);\n  const level2Data = [{\n    question: \"Spell the word 'DOG'.\",\n    choices: [imageDOG, imageCAT, imageBEE, imageANT],\n    correct: imageDOG\n  }, {\n    question: \"Spell the word 'CAT'.\",\n    choices: [imageDOG, imageCAT, imageBEE, imageANT],\n    correct: imageCAT\n  }];\n  useEffect(() => {\n    if (isLevel1) {\n      const level1Questions = Array.from({\n        length: 10\n      }).map(() => getLevel1Question());\n      setCurrentData(level1Questions);\n    } else {\n      setCurrentData(level2Data);\n    }\n    setCurrentQuestionIndex(0);\n    setFeedback(\"\");\n  }, [isLevel1]);\n  const handleAnswerChange = selected => {\n    const currentQuestion = currentData[currentQuestionIndex];\n    if (selected === currentQuestion.correct) {\n      if (isLevel1) {\n        setLevel1Score(prevScore => prevScore + 1);\n      } else {\n        setLevel2Score(prevScore => prevScore + 1);\n      }\n      setFeedback(\"Correct!\");\n    } else {\n      setFeedback(`Incorrect! The correct answer was ${currentQuestion.correct}.`);\n    }\n    const nextIndex = currentQuestionIndex + 1;\n    if (nextIndex < currentData.length) {\n      setTimeout(() => {\n        setCurrentQuestionIndex(nextIndex);\n        setFeedback(\"\");\n      }, 1000);\n    } else {\n      if (!isLevel1) {\n        // Quiz is completed\n        setQuizCompleted(true);\n      } else {\n        console.log(\"Level 1 finished\");\n      }\n    }\n  };\n  const handleNextLevel = () => {\n    setIsLevel1(false);\n  };\n\n  // Function to send an API request to update the lesson in the DB\n  const updateLessonQuizCompletion = async totalScore => {\n    try {\n      const userName = localStorage.getItem(\"userName\"); // Fetch logged-in user's username from localStorage\n      const lessonId = \"101\"; // The lesson to check and update\n      if (totalScore === 4) {\n        await axios.put(\"http://localhost:5000/api/lessons/update-lesson\", {\n          lessonId: lessonId,\n          userName: userName,\n          quiz_complete: true\n        });\n        console.log(\"Lesson updated successfully!\");\n      }\n    } catch (error) {\n      console.error(\"Error updating lesson:\", error);\n    }\n  };\n  if (quizCompleted) {\n    const totalScore = level1Score + level2Score;\n    updateLessonQuizCompletion(totalScore); // Update the lesson if score is 4\n    return /*#__PURE__*/_jsxDEV(QuizCompletion, {\n      score: totalScore,\n      totalQuestions: level1Data.length + level2Data.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this);\n  }\n  if (!currentData.length || !currentData[currentQuestionIndex]) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 12\n    }, this);\n  }\n  const currentQuestion = currentData[currentQuestionIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Main_Div\",\n    style: {\n      paddingLeft: \"15%\",\n      maxWidth: \"600px\",\n      margin: \"0 auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        paddingRight: \"30%\"\n      },\n      children: \"ASL Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        paddingLeft: \"2%\",\n        fontSize: \"25px\"\n      },\n      children: currentQuestion.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), currentQuestion.image && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: currentQuestion.image,\n      alt: \"ASL Sign\",\n      style: {\n        maxWidth: \"100%\",\n        height: \"auto\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingLeft: \"10%\",\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        gap: \"10px\",\n        marginTop: \"20px\"\n      },\n      children: currentQuestion.choices.map((choice, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          backgroundColor: \"#4CAF50\",\n          color: \"white\",\n          fontSize: \"16px\",\n          padding: \"10px\",\n          borderRadius: \"5px\",\n          border: \"none\",\n          cursor: \"pointer\"\n        },\n        onClick: () => handleAnswerChange(choice),\n        children: choice\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), feedback && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\",\n        fontSize: \"18px\",\n        fontWeight: \"bold\",\n        color: feedback.includes(\"Incorrect\") ? \"red\" : \"green\"\n      },\n      children: feedback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }, this), currentQuestionIndex === currentData.length - 1 && isLevel1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          marginTop: \"20px\",\n          padding: \"10px 20px\",\n          backgroundColor: \"#2196F3\",\n          color: \"white\",\n          fontSize: \"16px\",\n          borderRadius: \"5px\",\n          cursor: \"pointer\"\n        },\n        onClick: handleNextLevel,\n        children: \"Next Level\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 5\n  }, this);\n}\n_s(Quiz, \"hKur42g7kpukd9rqfl7FVEqTFu8=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","imageA","imageB","imageC","imageD","imageE","imageF","imageG","imageH","imageI","imageJ","imageK","imageL","imageM","imageN","imageO","imageP","imageQ","imageR","imageS","imageT","imageU","imageV","imageW","imageX","imageY","imageZ","imageCAT","imageDOG","imageBEE","imageANT","QuizCompletion","Navbar","axios","jsxDEV","_jsxDEV","allLevel1Images","image","letter","getRandomLetters","array","shuffledArray","sort","Math","random","slice","getLevel1Question","firstLetter","secondLetter","correctAnswer","wrongAnswers","length","randomLetter","includes","push","choices","question","map","choice","correct","Quiz","_s","currentQuestionIndex","setCurrentQuestionIndex","isLevel1","setIsLevel1","level1Score","setLevel1Score","level2Score","setLevel2Score","currentData","setCurrentData","feedback","setFeedback","quizCompleted","setQuizCompleted","level2Data","level1Questions","Array","from","handleAnswerChange","selected","currentQuestion","prevScore","nextIndex","setTimeout","console","log","handleNextLevel","updateLessonQuizCompletion","totalScore","userName","localStorage","getItem","lessonId","put","quiz_complete","error","score","totalQuestions","level1Data","fileName","_jsxFileName","lineNumber","columnNumber","children","className","style","paddingLeft","maxWidth","margin","paddingRight","fontSize","src","alt","height","display","flexWrap","gap","marginTop","index","backgroundColor","color","padding","borderRadius","border","cursor","onClick","fontWeight","_c","$RefreshReg$"],"sources":["/Users/brandonboston/Desktop/SignWithMe_Newest/SignWithMe-11-22-2024/sign-with-me/src/components/Alphabet_Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n// import imageA from \"../Letters/ASLAlphabetPoster_A.webp.png\";\r\n// import imageB from \"../Letters/ASLAlphabetPoster_B.webp.png\";\r\nimport imageA from \"../Letters/A_Cropped.png\";\r\nimport imageB from \"../Letters/B_Cropped.png\";\r\nimport imageC from \"../Letters/C_Cropped.png\";\r\nimport imageD from \"../Letters/D_Cropped.png\";\r\nimport imageE from \"../Letters/E_Cropped.png\";\r\nimport imageF from \"../Letters/F_Cropped.png\";\r\nimport imageG from \"../Letters/G_Cropped.png\";\r\nimport imageH from \"../Letters/H_Cropped.png\";\r\nimport imageI from \"../Letters/I_Cropped.png\";\r\nimport imageJ from \"../Letters/J_Cropped.png\";\r\nimport imageK from \"../Letters/K_Cropped.png\";\r\nimport imageL from \"../Letters/L_Cropped.png\";\r\nimport imageM from \"../Letters/M_Cropped.png\";\r\nimport imageN from \"../Letters/N_Cropped.png\";\r\nimport imageO from \"../Letters/O_Cropped.png\";\r\nimport imageP from \"../Letters/P_Cropped.png\";\r\nimport imageQ from \"../Letters/Q_Cropped.png\";\r\nimport imageR from \"../Letters/R_Cropped.png\";\r\nimport imageS from \"../Letters/S_Cropped.png\";\r\nimport imageT from \"../Letters/T_Cropped.png\";\r\nimport imageU from \"../Letters/U_Cropped.png\";\r\nimport imageV from \"../Letters/V_Cropped.png\";\r\nimport imageW from \"../Letters/W_Cropped.png\";\r\nimport imageX from \"../Letters/X_Cropped.png\";\r\nimport imageY from \"../Letters/Y_Cropped.png\";\r\nimport imageZ from \"../Letters/Z_Cropped.png\";\r\n\r\nimport imageCAT from \"../Letters/ASL_CAT_Cropped.png\";\r\nimport imageDOG from \"../Letters/ASL_DOG_Cropped.png\";\r\nimport imageBEE from \"../Letters/ASL_BEE_Cropped.png\";\r\nimport imageANT from \"../Letters/ASL_ANT_Cropped.png\";\r\nimport \"./Alphabet_Quiz.css\";\r\nimport QuizCompletion from \"./quizCompletion\"; // Make sure to create this component\r\nimport Navbar from \"./Navbar\";\r\nimport axios from \"axios\"; // Import axios for making HTTP requests\r\n\r\n// Example of all letter images for Level 1\r\nconst allLevel1Images = [\r\n  { image: imageA, letter: \"A\" },\r\n  { image: imageB, letter: \"B\" },\r\n  { image: imageC, letter: \"C\" },\r\n  { image: imageD, letter: \"D\" },\r\n  { image: imageE, letter: \"E\" },\r\n  { image: imageF, letter: \"F\" },\r\n  { image: imageG, letter: \"G\" },\r\n  { image: imageH, letter: \"H\" },\r\n  { image: imageI, letter: \"I\" },\r\n  { image: imageJ, letter: \"J\" },\r\n  { image: imageK, letter: \"K\" },\r\n  { image: imageL, letter: \"L\" },\r\n  { image: imageM, letter: \"M\" },\r\n  { image: imageN, letter: \"N\" },\r\n  { image: imageO, letter: \"O\" },\r\n  { image: imageP, letter: \"P\" },\r\n  { image: imageQ, letter: \"Q\" },\r\n  { image: imageR, letter: \"R\" },\r\n  { image: imageS, letter: \"S\" },\r\n  { image: imageT, letter: \"T\" },\r\n  { image: imageU, letter: \"U\" },\r\n  { image: imageV, letter: \"V\" },\r\n  { image: imageW, letter: \"W\" },\r\n  { image: imageX, letter: \"X\" },\r\n  { image: imageY, letter: \"Y\" },\r\n  { image: imageZ, letter: \"Z\" },\r\n];\r\n\r\n// Helper function to get random unique items from an array\r\nconst getRandomLetters = (array) => {\r\n  const shuffledArray = array.sort(() => 0.5 - Math.random()); // Shuffle array\r\n  return shuffledArray.slice(0, 2); // Pick first two\r\n};\r\n\r\n// Function to randomize the choices and set the data for the current question\r\nconst getLevel1Question = () => {\r\n  const [firstLetter, secondLetter] = getRandomLetters(allLevel1Images);\r\n\r\n  const correctAnswer = firstLetter;\r\n  const wrongAnswers = [secondLetter];\r\n\r\n  // Get two other wrong answers (you can randomize these as well)\r\n  while (wrongAnswers.length < 3) {\r\n    const randomLetter = getRandomLetters(allLevel1Images)[0];\r\n    if (!wrongAnswers.includes(randomLetter)) {\r\n      wrongAnswers.push(randomLetter);\r\n    }\r\n  }\r\n\r\n  // Randomize the answers array so the correct answer isn't always in the same position\r\n  const choices = [correctAnswer, ...wrongAnswers].sort(() => Math.random() - 0.5);\r\n\r\n  return {\r\n    question: \"Select the letter this sign represents.\",\r\n    image: correctAnswer.image,\r\n    choices: choices.map(choice => choice.letter),\r\n    correct: correctAnswer.letter,\r\n  };\r\n};\r\n\r\nfunction Quiz() {\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [isLevel1, setIsLevel1] = useState(true);\r\n  const [level1Score, setLevel1Score] = useState(0);\r\n  const [level2Score, setLevel2Score] = useState(0);\r\n  const [currentData, setCurrentData] = useState([]);\r\n  const [feedback, setFeedback] = useState(\"\");\r\n  const [quizCompleted, setQuizCompleted] = useState(false);\r\n\r\n  const level2Data = [\r\n    {\r\n      question: \"Spell the word 'DOG'.\",\r\n      choices: [imageDOG, imageCAT, imageBEE, imageANT],\r\n      correct: imageDOG,\r\n    },\r\n    {\r\n      question: \"Spell the word 'CAT'.\",\r\n      choices: [imageDOG, imageCAT, imageBEE, imageANT],\r\n      correct: imageCAT,\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    if (isLevel1) {\r\n      const level1Questions = Array.from({ length: 10 }).map(() => getLevel1Question());\r\n      setCurrentData(level1Questions);\r\n    } else {\r\n      setCurrentData(level2Data);\r\n    }\r\n    setCurrentQuestionIndex(0);\r\n    setFeedback(\"\");\r\n  }, [isLevel1]);\r\n\r\n  const handleAnswerChange = (selected) => {\r\n    const currentQuestion = currentData[currentQuestionIndex];\r\n    if (selected === currentQuestion.correct) {\r\n      if (isLevel1) {\r\n        setLevel1Score((prevScore) => prevScore + 1);\r\n      } else {\r\n        setLevel2Score((prevScore) => prevScore + 1);\r\n      }\r\n      setFeedback(\"Correct!\");\r\n    } else {\r\n      setFeedback(\r\n        `Incorrect! The correct answer was ${currentQuestion.correct}.`\r\n      );\r\n    }\r\n\r\n    const nextIndex = currentQuestionIndex + 1;\r\n    if (nextIndex < currentData.length) {\r\n      setTimeout(() => {\r\n        setCurrentQuestionIndex(nextIndex);\r\n        setFeedback(\"\");\r\n      }, 1000);\r\n    } else {\r\n      if (!isLevel1) {\r\n        // Quiz is completed\r\n        setQuizCompleted(true);\r\n      } else {\r\n        console.log(\"Level 1 finished\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleNextLevel = () => {\r\n    setIsLevel1(false);\r\n  };\r\n\r\n  // Function to send an API request to update the lesson in the DB\r\n  const updateLessonQuizCompletion = async (totalScore) => {\r\n    try {\r\n      const userName = localStorage.getItem(\"userName\"); // Fetch logged-in user's username from localStorage\r\n      const lessonId = \"101\"; // The lesson to check and update\r\n      if (totalScore === 4) {\r\n        await axios.put(\"http://localhost:5000/api/lessons/update-lesson\", {\r\n          lessonId: lessonId,\r\n          userName: userName,\r\n          quiz_complete: true,\r\n        });\r\n        console.log(\"Lesson updated successfully!\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating lesson:\", error);\r\n    }\r\n  };\r\n\r\n  if (quizCompleted) {\r\n    const totalScore = level1Score + level2Score;\r\n    updateLessonQuizCompletion(totalScore); // Update the lesson if score is 4\r\n    return (\r\n      <QuizCompletion\r\n        score={totalScore}\r\n        totalQuestions={level1Data.length + level2Data.length}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (!currentData.length || !currentData[currentQuestionIndex]) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  const currentQuestion = currentData[currentQuestionIndex];\r\n\r\n  return (\r\n    <div\r\n      className=\"Main_Div\"\r\n      style={{ paddingLeft: \"15%\", maxWidth: \"600px\", margin: \"0 auto\" }}\r\n    >\r\n      <h1 style={{ paddingRight: \"30%\" }}>ASL Quiz</h1>\r\n      <p style={{ paddingLeft: \"2%\", fontSize: \"25px\" }}>\r\n        {currentQuestion.question}\r\n      </p>\r\n      {currentQuestion.image && (\r\n        <img\r\n          src={currentQuestion.image}\r\n          alt=\"ASL Sign\"\r\n          style={{ maxWidth: \"100%\", height: \"auto\" }}\r\n        />\r\n      )}\r\n\r\n      <div\r\n        style={{\r\n          paddingLeft: \"10%\",\r\n          display: \"flex\",\r\n          flexWrap: \"wrap\",\r\n          gap: \"10px\",\r\n          marginTop: \"20px\",\r\n        }}\r\n      >\r\n        {currentQuestion.choices.map((choice, index) => (\r\n          <button\r\n            key={index}\r\n            style={{\r\n              backgroundColor: \"#4CAF50\",\r\n              color: \"white\",\r\n              fontSize: \"16px\",\r\n              padding: \"10px\",\r\n              borderRadius: \"5px\",\r\n              border: \"none\",\r\n              cursor: \"pointer\",\r\n            }}\r\n            onClick={() => handleAnswerChange(choice)}\r\n          >\r\n            {choice}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      {feedback && (\r\n        <div\r\n          style={{\r\n            marginTop: \"20px\",\r\n            fontSize: \"18px\",\r\n            fontWeight: \"bold\",\r\n            color: feedback.includes(\"Incorrect\") ? \"red\" : \"green\",\r\n          }}\r\n        >\r\n          {feedback}\r\n        </div>\r\n      )}\r\n\r\n      {currentQuestionIndex === currentData.length - 1 && isLevel1 && (\r\n        <div>\r\n          <button\r\n            style={{\r\n              marginTop: \"20px\",\r\n              padding: \"10px 20px\",\r\n              backgroundColor: \"#2196F3\",\r\n              color: \"white\",\r\n              fontSize: \"16px\",\r\n              borderRadius: \"5px\",\r\n              cursor: \"pointer\",\r\n            }}\r\n            onClick={handleNextLevel}\r\n          >\r\n            Next Level\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Quiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}