{"ast":null,"code":"var _jsxFileName = \"/Users/brandonboston/Desktop/SignWithMe/SignWithMe_Newest/sign-with-me/src/components/Number_Quiz.js\";\n// src/components/Number_Quiz.test.js\nimport React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport '@testing-library/jest-dom';\nimport Number_Quiz from './Number_Quiz';\n\n// Mock the image imports\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\njest.mock('../Letters/number00.png', () => 'mocked-number00');\n// ... mock other number images similarly\n\ndescribe('Number_Quiz Component', () => {\n  // ... other tests (from the previous responses)\n\n  test('feedback message displays correct color', () => {\n    render(/*#__PURE__*/_jsxDEV(Number_Quiz, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 16\n    }, this));\n\n    // Mock random numbers for predictable testing\n    const mockedRandomNumbers = [0, 1, 2, 3, 4];\n    const numberElements = mockedRandomNumbers.map(num => screen.getByText(num.toString()));\n    const dropzones = mockedRandomNumbers.map(num => screen.getAllByRole('img')[mockedRandomNumbers.indexOf(num)].closest('.asl-dropzone')); // Get the dropzone div\n\n    // Simulate correct drop\n    fireEvent.dragStart(numberElements[0], {\n      dataTransfer: {\n        setData: jest.fn()\n      }\n    });\n    fireEvent.drop(dropzones[0], {\n      dataTransfer: {\n        getData: () => \"0\"\n      }\n    });\n    expect(screen.getByText(/Correct!/i)).toHaveClass('green'); // Check for green color\n\n    // Simulate incorrect drop\n    fireEvent.dragStart(numberElements[1], {\n      dataTransfer: {\n        setData: jest.fn()\n      }\n    });\n    fireEvent.drop(dropzones[0], {\n      dataTransfer: {\n        getData: () => \"1\"\n      }\n    }); // Incorrect drop\n    expect(screen.getByText(/Incorrect number dropped! Try again./i)).toHaveClass('red'); // Check for red color\n  });\n  test('all matches correct feedback and color', () => {\n    render(/*#__PURE__*/_jsxDEV(Number_Quiz, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }, this));\n\n    // Mock random numbers for predictable testing\n    const mockedRandomNumbers = [0, 1, 2, 3, 4];\n    const numberElements = mockedRandomNumbers.map(num => screen.getByText(num.toString()));\n    const dropzones = mockedRandomNumbers.map(num => screen.getAllByRole('img')[mockedRandomNumbers.indexOf(num)].closest('.asl-dropzone')); // Get parent div\n\n    mockedRandomNumbers.forEach((num, index) => {\n      fireEvent.dragStart(numberElements[index], {\n        dataTransfer: {\n          setData: jest.fn()\n        }\n      });\n      fireEvent.drop(dropzones[index], {\n        dataTransfer: {\n          getData: () => num.toString()\n        }\n      });\n    });\n\n    // Check for all matched feedback and color\n    expect(screen.getByText(/Well done! You matched all the numbers correctly!/i)).toHaveClass('green');\n  });\n});","map":{"version":3,"names":["React","render","screen","fireEvent","Number_Quiz","jsxDEV","_jsxDEV","jest","mock","describe","test","fileName","_jsxFileName","lineNumber","columnNumber","mockedRandomNumbers","numberElements","map","num","getByText","toString","dropzones","getAllByRole","indexOf","closest","dragStart","dataTransfer","setData","fn","drop","getData","expect","toHaveClass","forEach","index"],"sources":["/Users/brandonboston/Desktop/SignWithMe/SignWithMe_Newest/sign-with-me/src/components/Number_Quiz.js"],"sourcesContent":["// src/components/Number_Quiz.test.js\nimport React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport '@testing-library/jest-dom';\nimport Number_Quiz from './Number_Quiz';\n\n// Mock the image imports\njest.mock('../Letters/number00.png', () => 'mocked-number00');\n// ... mock other number images similarly\n\ndescribe('Number_Quiz Component', () => {\n    // ... other tests (from the previous responses)\n\n    test('feedback message displays correct color', () => {\n        render(<Number_Quiz />);\n\n        // Mock random numbers for predictable testing\n        const mockedRandomNumbers = [0, 1, 2, 3, 4];\n        const numberElements = mockedRandomNumbers.map(num => screen.getByText(num.toString()));\n        const dropzones = mockedRandomNumbers.map(num => screen.getAllByRole('img')[mockedRandomNumbers.indexOf(num)].closest('.asl-dropzone')); // Get the dropzone div\n\n\n        // Simulate correct drop\n        fireEvent.dragStart(numberElements[0], { dataTransfer: { setData: jest.fn() } });\n        fireEvent.drop(dropzones[0], { dataTransfer: { getData: () => \"0\" } });\n        expect(screen.getByText(/Correct!/i)).toHaveClass('green'); // Check for green color\n\n        // Simulate incorrect drop\n        fireEvent.dragStart(numberElements[1], { dataTransfer: { setData: jest.fn() } });\n        fireEvent.drop(dropzones[0], { dataTransfer: { getData: () => \"1\" } }); // Incorrect drop\n        expect(screen.getByText(/Incorrect number dropped! Try again./i)).toHaveClass('red'); // Check for red color\n\n      });\n\n\n\n    test('all matches correct feedback and color', () => {\n        render(<Number_Quiz />);\n    \n        // Mock random numbers for predictable testing\n        const mockedRandomNumbers = [0, 1, 2, 3, 4];\n        const numberElements = mockedRandomNumbers.map(num => screen.getByText(num.toString()));\n        const dropzones = mockedRandomNumbers.map(num => screen.getAllByRole('img')[mockedRandomNumbers.indexOf(num)].closest('.asl-dropzone')); // Get parent div\n\n\n        mockedRandomNumbers.forEach((num, index) => {\n          fireEvent.dragStart(numberElements[index], { dataTransfer: { setData: jest.fn() } });\n          fireEvent.drop(dropzones[index], { dataTransfer: { getData: () => num.toString() } });\n        });\n    \n        // Check for all matched feedback and color\n        expect(screen.getByText(/Well done! You matched all the numbers correctly!/i)).toHaveClass('green');\n      });\n\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}