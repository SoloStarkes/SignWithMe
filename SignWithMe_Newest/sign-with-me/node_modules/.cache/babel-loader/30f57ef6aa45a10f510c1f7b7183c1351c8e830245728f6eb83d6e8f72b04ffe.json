{"ast":null,"code":"var _jsxFileName = \"/Users/brandonboston/Desktop/SignWithMe/SignWithMe_Newest/sign-with-me/src/components/Sentence.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Sentence.css\";\nimport axios from \"axios\"; // Ensure axios is imported to make HTTP requests\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // Sentence data\n  const questions = [[\"I\", \"READ\", \"BOOK\"], [\"I\", \"LOVE\", \"YOU\"], [\"DOG\", \"RUNS\", \"FAST\"], [\"MY\", \"NAME\", \"IS\", \"JOHN\"], [\"SHE\", \"IS\", \"NICE\"]];\n\n  // Correct ASL translations\n  const aslTranslations = [[\"BOOK\", \"I\", \"READ\"],\n  // ASL structure for \"I READ BOOK\"\n  [\"YOU\", \"I\", \"LOVE\"],\n  // ASL structure for \"I LOVE YOU\"\n  [\"DOG\", \"RUNS\", \"FAST\"],\n  // Same as original\n  [\"MY\", \"NAME\", \"IS\", \"JOHN\"],\n  // ASL structure with \"IS\" fingerspelled\n  [\"SHE\", \"IS\", \"NICE\"] // ASL structure with \"IS\" fingerspelled\n  ];\n\n  // State\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [currentSentence, setCurrentSentence] = useState([]);\n  const [draggedWord, setDraggedWord] = useState(\"\");\n  const navigate = useNavigate();\n\n  // Drag-and-drop handlers\n  const allowDrop = e => e.preventDefault();\n  const handleDragStart = word => {\n    setDraggedWord(word);\n  };\n  const handleDrop = () => {\n    setCurrentSentence(prev => [...prev, draggedWord]);\n    setDraggedWord(\"\");\n  };\n  const checkSentence = () => {\n    const isCorrect = JSON.stringify(currentSentence) === JSON.stringify(aslTranslations[currentQuestionIndex]);\n    if (isCorrect) {\n      alert(\"Correct!\");\n      if (currentQuestionIndex < questions.length - 1) {\n        // Move to the next question\n        setCurrentQuestionIndex(prev => prev + 1);\n        setCurrentSentence([]);\n      } else {\n        alert(\"You have completed all questions!\");\n        const userName = localStorage.getItem(\"userName\");\n        if (userName) {\n          // Send a PUT request to update the lesson with quiz_complete = true\n          axios.put(\"http://localhost:5000/api/lessons/update-lesson\", {\n            lessonId: \"201\",\n            userName: userName,\n            quiz_complete: true\n          }).then(response => {\n            console.log(\"Lesson updated:\", response.data);\n          }).catch(error => {\n            console.error(\"Error updating lesson:\", error);\n          });\n          navigate(\"/units\");\n        } else {\n          console.error(\"User is not logged in, unable to update lesson.\");\n        }\n      }\n    } else {\n      alert(\"Try again!\");\n    }\n  };\n\n  // Clear drop zone\n  const clearDropZone = () => {\n    setCurrentSentence([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ASL Practice\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"index.html\",\n          children: \"Vocabulary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/units/lesson4\",\n          children: \"Grammar Rules\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Practice: Build a Sentence\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Drag and drop words to form the correct ASL sentence:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question\",\n          children: questions[currentQuestionIndex].map(word => /*#__PURE__*/_jsxDEV(\"div\", {\n            draggable: true,\n            onDragStart: () => handleDragStart(word),\n            className: \"word\",\n            children: word\n          }, word, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"drop-zone\",\n          onDrop: handleDrop,\n          onDragOver: allowDrop,\n          children: currentSentence.map((word, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"dropped-word\",\n            children: word\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: checkSentence,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: clearDropZone,\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"3LUvGYfEzaGjvLzNBjcA3aSCiEk=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","App","_s","questions","aslTranslations","currentQuestionIndex","setCurrentQuestionIndex","currentSentence","setCurrentSentence","draggedWord","setDraggedWord","navigate","allowDrop","e","preventDefault","handleDragStart","word","handleDrop","prev","checkSentence","isCorrect","JSON","stringify","alert","length","userName","localStorage","getItem","put","lessonId","quiz_complete","then","response","console","log","data","catch","error","clearDropZone","children","fileName","_jsxFileName","lineNumber","columnNumber","href","className","map","draggable","onDragStart","onDrop","onDragOver","index","onClick","_c","$RefreshReg$"],"sources":["/Users/brandonboston/Desktop/SignWithMe/SignWithMe_Newest/sign-with-me/src/components/Sentence.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./Sentence.css\";\nimport axios from \"axios\"; // Ensure axios is imported to make HTTP requests\nimport { useNavigate } from \"react-router-dom\";\n\nconst App = () => {\n  // Sentence data\n  const questions = [\n    [\"I\", \"READ\", \"BOOK\"],\n    [\"I\", \"LOVE\", \"YOU\"],\n    [\"DOG\", \"RUNS\", \"FAST\"],\n    [\"MY\", \"NAME\", \"IS\", \"JOHN\"],\n    [\"SHE\", \"IS\", \"NICE\"],\n  ];\n\n  // Correct ASL translations\n  const aslTranslations = [\n    [\"BOOK\", \"I\", \"READ\"], // ASL structure for \"I READ BOOK\"\n    [\"YOU\", \"I\", \"LOVE\"], // ASL structure for \"I LOVE YOU\"\n    [\"DOG\", \"RUNS\", \"FAST\"], // Same as original\n    [\"MY\", \"NAME\", \"IS\", \"JOHN\"], // ASL structure with \"IS\" fingerspelled\n    [\"SHE\", \"IS\", \"NICE\"], // ASL structure with \"IS\" fingerspelled\n  ];\n\n  // State\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [currentSentence, setCurrentSentence] = useState([]);\n  const [draggedWord, setDraggedWord] = useState(\"\");\n  const navigate = useNavigate();\n\n  // Drag-and-drop handlers\n  const allowDrop = (e) => e.preventDefault();\n\n  const handleDragStart = (word) => {\n    setDraggedWord(word);\n  };\n\n  const handleDrop = () => {\n    setCurrentSentence((prev) => [...prev, draggedWord]);\n    setDraggedWord(\"\");\n  };\n\n  const checkSentence = () => {\n    const isCorrect =\n      JSON.stringify(currentSentence) ===\n      JSON.stringify(aslTranslations[currentQuestionIndex]);\n    if (isCorrect) {\n      alert(\"Correct!\");\n      if (currentQuestionIndex < questions.length - 1) {\n        // Move to the next question\n        setCurrentQuestionIndex((prev) => prev + 1);\n        setCurrentSentence([]);\n      } else {\n        alert(\"You have completed all questions!\");\n\n        const userName = localStorage.getItem(\"userName\");\n\n        if (userName) {\n          // Send a PUT request to update the lesson with quiz_complete = true\n          axios\n            .put(\"http://localhost:5000/api/lessons/update-lesson\", {\n              lessonId: \"201\",\n              userName: userName,\n              quiz_complete: true,\n            })\n            .then((response) => {\n              console.log(\"Lesson updated:\", response.data);\n            })\n            .catch((error) => {\n              console.error(\"Error updating lesson:\", error);\n            });\n          navigate(\"/units\");\n        } else {\n          console.error(\"User is not logged in, unable to update lesson.\");\n        }\n      }\n    } else {\n      alert(\"Try again!\");\n    }\n  };\n\n  // Clear drop zone\n  const clearDropZone = () => {\n    setCurrentSentence([]);\n  };\n\n  return (\n    <div>\n      <header>\n        <h1>ASL Practice</h1>\n        <nav>\n          <a href=\"index.html\">Vocabulary</a>\n          <a href=\"/units/lesson4\">Grammar Rules</a>\n        </nav>\n      </header>\n\n      <main>\n        <section>\n          <h2>Practice: Build a Sentence</h2>\n          <p>Drag and drop words to form the correct ASL sentence:</p>\n\n          {/* Display the current question */}\n          <div className=\"question\">\n            {questions[currentQuestionIndex].map((word) => (\n              <div\n                key={word}\n                draggable\n                onDragStart={() => handleDragStart(word)}\n                className=\"word\"\n              >\n                {word}\n              </div>\n            ))}\n          </div>\n\n          {/* Drop zone */}\n          <div className=\"drop-zone\" onDrop={handleDrop} onDragOver={allowDrop}>\n            {currentSentence.map((word, index) => (\n              <span key={index} className=\"dropped-word\">\n                {word}\n              </span>\n            ))}\n          </div>\n\n          {/* Buttons */}\n          <div className=\"buttons\">\n            <button onClick={checkSentence}>Submit</button>\n            <button onClick={clearDropZone}>Clear</button>\n          </div>\n        </section>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}