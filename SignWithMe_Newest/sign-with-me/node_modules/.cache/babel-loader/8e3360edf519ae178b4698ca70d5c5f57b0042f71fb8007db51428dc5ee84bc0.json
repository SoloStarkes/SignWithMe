{"ast":null,"code":"var _jsxFileName = \"/Users/brandonboston/Desktop/SignWithMe_Newest/SignWithMe-11-22-2024/sign-with-me/src/components/Finger_Spelling.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Finger_Spelling.css\";\nimport axios from \"axios\"; // Make sure axios is imported\nimport A from \"../Letters/ASLAlphabetPoster_A.webp.png\";\nimport B from \"../Letters/ASLAlphabetPoster_B.webp.png\";\nimport C from \"../Letters/ASLAlphabetPoster_C.webp.png\";\nimport D from \"../Letters/ASLAlphabetPoster_D.webp.png\";\nimport E from \"../Letters/ASLAlphabetPoster_E.webp.png\";\nimport F from \"../Letters/ASLAlphabetPoster_F.webp.png\";\nimport G from \"../Letters/ASLAlphabetPoster_G.webp.png\";\nimport H from \"../Letters/ASLAlphabetPoster_H.webp.png\";\nimport I from \"../Letters/ASLAlphabetPoster_I.webp.png\";\nimport J from \"../Letters/ASLAlphabetPoster_J.webp.png\";\nimport K from \"../Letters/ASLAlphabetPoster_K.webp.png\";\nimport L from \"../Letters/ASLAlphabetPoster_L.webp.png\";\nimport M from \"../Letters/ASLAlphabetPoster_M.webp.png\";\nimport N from \"../Letters/ASLAlphabetPoster_N.webp.png\";\nimport O from \"../Letters/ASLAlphabetPoster_O.webp.png\";\nimport P from \"../Letters/ASLAlphabetPoster_P.webp.png\";\nimport Q from \"../Letters/ASLAlphabetPoster_Q.webp.png\";\nimport R from \"../Letters/ASLAlphabetPoster_R.webp.png\";\nimport S from \"../Letters/ASLAlphabetPoster_S.webp.png\";\nimport T from \"../Letters/ASLAlphabetPoster_T.webp.png\";\nimport U from \"../Letters/ASLAlphabetPoster_U.webp.png\";\nimport V from \"../Letters/ASLAlphabetPoster_V.webp.png\";\nimport W from \"../Letters/ASLAlphabetPoster_W.webp.png\";\nimport X from \"../Letters/ASLAlphabetPoster_X.webp.png\";\nimport Y from \"../Letters/ASLAlphabetPoster_Y.webp.png\";\nimport Z from \"../Letters/ASLAlphabetPoster_Z.webp.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst words = [\"BAT\", \"MORNING\", \"ORANGE\"]; // Target words\n\nconst Finger_Spelling = () => {\n  _s();\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [popupMessage, setPopupMessage] = useState(\"\");\n  const [finalMessage, setFinalMessage] = useState(\"\");\n  const [slots, setSlots] = useState([]);\n  const currentWord = words[currentWordIndex];\n  useEffect(() => {\n    initializeGame();\n  }, [currentWordIndex]);\n  const initializeGame = () => {\n    setPopupMessage(\"\");\n    setFinalMessage(\"\");\n    setSlots(currentWord.split(\"\").map(letter => ({\n      letter,\n      filled: false,\n      incorrect: false,\n      correct: false\n    })));\n  };\n  const handleDrop = (e, index) => {\n    e.preventDefault();\n    const draggedLetter = e.dataTransfer.getData(\"text/plain\");\n    setSlots(prevSlots => {\n      const newSlots = [...prevSlots];\n      const slot = newSlots[index];\n      if (slot.filled) return prevSlots; // Slot already filled\n\n      if (draggedLetter === slot.letter) {\n        slot.filled = true;\n        slot.correct = true;\n      } else {\n        slot.incorrect = true;\n        setTimeout(() => {\n          setSlots(prevSlots => {\n            const updatedSlots = [...prevSlots];\n            updatedSlots[index].incorrect = false;\n            return updatedSlots;\n          });\n        }, 1000);\n      }\n      return newSlots;\n    });\n    // Use setTimeout to ensure state has updated before checking win condition\n    setTimeout(checkWinCondition, 0);\n  };\n  const checkWinCondition = () => {\n    const allFilled = slots.every(slot => slot.filled && slot.correct);\n    if (allFilled) {\n      setScore(prevScore => prevScore + 1);\n      setPopupMessage(\"+1\");\n      setFinalMessage(\"âœ” All Correct!\");\n      setTimeout(() => {\n        if (currentWordIndex + 1 < words.length) {\n          setCurrentWordIndex(prevIndex => prevIndex + 1);\n        } else {\n          setFinalMessage(\"ðŸŽ‰ Game Completed!\");\n          // Assuming userName is stored in localStorage after login\n          const userName = localStorage.getItem(\"userName\");\n          if (userName) {\n            // Send a PUT request to update the lesson with quiz_complete = true\n            axios.put(\"http://localhost:5000/api/lessons/update-lesson\", {\n              lessonId: \"102\",\n              userName: userName,\n              quiz_complete: true\n            }).then(response => {\n              console.log(\"Lesson updated:\", response.data);\n            }).catch(error => {\n              console.error(\"Error updating lesson:\", error);\n            });\n          } else {\n            console.error(\"User is not logged in, unable to update lesson.\");\n          }\n        }\n      }, 1000);\n    }\n  };\n  const renderDropSlots = () => slots.map((slot, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `drop-slot ${slot.incorrect ? \"incorrect\" : \"\"} ${slot.filled ? \"correct\" : \"\"}`,\n    onDragOver: e => e.preventDefault(),\n    onDrop: e => handleDrop(e, index),\n    children: slot.filled && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: letterImages[slot.letter],\n      alt: `ASL sign for ${slot.letter}`,\n      className: \"slot-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }, this)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 7\n  }, this));\n  const letterImages = {\n    A,\n    B,\n    C,\n    D,\n    E,\n    F,\n    G,\n    H,\n    I,\n    J,\n    K,\n    L,\n    M,\n    N,\n    O,\n    P,\n    Q,\n    R,\n    S,\n    T,\n    U,\n    V,\n    W,\n    X,\n    Y,\n    Z\n  };\n  const renderASLPieces = () => Object.keys(letterImages).map(letter => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"alphabet-piece\",\n    draggable: true,\n    onDragStart: e => e.dataTransfer.setData(\"text/plain\", letter),\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: letterImages[letter],\n      alt: `ASL sign for ${letter}`,\n      className: \"alphabet-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }, this)\n  }, letter, false, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 7\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: 'white'\n        },\n        children: \"ASL Drag-and-Drop Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'white'\n        },\n        children: \"Drag the ASL signs to the correct boxes to spell the word!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"target-word-container\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          id: \"target-word\",\n          children: currentWord\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"game-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"drop-zone\",\n          className: \"drop-zone\",\n          children: renderDropSlots()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"alphabet-container2\",\n          className: \"alphabet-container2\",\n          children: renderASLPieces()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"feedback\",\n        className: \"feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"score-display\",\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), popupMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"popup\",\n        className: \"popup\",\n        children: popupMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this), finalMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"final-message\",\n        children: finalMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n};\n_s(Finger_Spelling, \"e1J4d1yvuv/YGTUJrxbcwNXg8v4=\");\n_c = Finger_Spelling;\nexport default Finger_Spelling;\nvar _c;\n$RefreshReg$(_c, \"Finger_Spelling\");","map":{"version":3,"names":["React","useState","useEffect","axios","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","jsxDEV","_jsxDEV","words","Finger_Spelling","_s","currentWordIndex","setCurrentWordIndex","score","setScore","popupMessage","setPopupMessage","finalMessage","setFinalMessage","slots","setSlots","currentWord","initializeGame","split","map","letter","filled","incorrect","correct","handleDrop","e","index","preventDefault","draggedLetter","dataTransfer","getData","prevSlots","newSlots","slot","setTimeout","updatedSlots","checkWinCondition","allFilled","every","prevScore","length","prevIndex","userName","localStorage","getItem","put","lessonId","quiz_complete","then","response","console","log","data","catch","error","renderDropSlots","className","onDragOver","onDrop","children","src","letterImages","alt","fileName","_jsxFileName","lineNumber","columnNumber","renderASLPieces","Object","keys","draggable","onDragStart","setData","style","color","id","_c","$RefreshReg$"],"sources":["/Users/brandonboston/Desktop/SignWithMe_Newest/SignWithMe-11-22-2024/sign-with-me/src/components/Finger_Spelling.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Finger_Spelling.css\";\r\nimport axios from \"axios\"; // Make sure axios is imported\r\nimport A from \"../Letters/ASLAlphabetPoster_A.webp.png\";\r\nimport B from \"../Letters/ASLAlphabetPoster_B.webp.png\";\r\nimport C from \"../Letters/ASLAlphabetPoster_C.webp.png\";\r\nimport D from \"../Letters/ASLAlphabetPoster_D.webp.png\";\r\nimport E from \"../Letters/ASLAlphabetPoster_E.webp.png\";\r\nimport F from \"../Letters/ASLAlphabetPoster_F.webp.png\";\r\nimport G from \"../Letters/ASLAlphabetPoster_G.webp.png\";\r\nimport H from \"../Letters/ASLAlphabetPoster_H.webp.png\";\r\nimport I from \"../Letters/ASLAlphabetPoster_I.webp.png\";\r\nimport J from \"../Letters/ASLAlphabetPoster_J.webp.png\";\r\nimport K from \"../Letters/ASLAlphabetPoster_K.webp.png\";\r\nimport L from \"../Letters/ASLAlphabetPoster_L.webp.png\";\r\nimport M from \"../Letters/ASLAlphabetPoster_M.webp.png\";\r\nimport N from \"../Letters/ASLAlphabetPoster_N.webp.png\";\r\nimport O from \"../Letters/ASLAlphabetPoster_O.webp.png\";\r\nimport P from \"../Letters/ASLAlphabetPoster_P.webp.png\";\r\nimport Q from \"../Letters/ASLAlphabetPoster_Q.webp.png\";\r\nimport R from \"../Letters/ASLAlphabetPoster_R.webp.png\";\r\nimport S from \"../Letters/ASLAlphabetPoster_S.webp.png\";\r\nimport T from \"../Letters/ASLAlphabetPoster_T.webp.png\";\r\nimport U from \"../Letters/ASLAlphabetPoster_U.webp.png\";\r\nimport V from \"../Letters/ASLAlphabetPoster_V.webp.png\";\r\nimport W from \"../Letters/ASLAlphabetPoster_W.webp.png\";\r\nimport X from \"../Letters/ASLAlphabetPoster_X.webp.png\";\r\nimport Y from \"../Letters/ASLAlphabetPoster_Y.webp.png\";\r\nimport Z from \"../Letters/ASLAlphabetPoster_Z.webp.png\";\r\n\r\nconst words = [\"BAT\", \"MORNING\", \"ORANGE\"]; // Target words\r\n\r\nconst Finger_Spelling = () => {\r\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [popupMessage, setPopupMessage] = useState(\"\");\r\n  const [finalMessage, setFinalMessage] = useState(\"\");\r\n  const [slots, setSlots] = useState([]);\r\n\r\n  const currentWord = words[currentWordIndex];\r\n\r\n  useEffect(() => {\r\n    initializeGame();\r\n  }, [currentWordIndex]);\r\n\r\n  const initializeGame = () => {\r\n    setPopupMessage(\"\");\r\n    setFinalMessage(\"\");\r\n    setSlots(\r\n      currentWord.split(\"\").map((letter) => ({\r\n        letter,\r\n        filled: false,\r\n        incorrect: false,\r\n        correct: false,\r\n      }))\r\n    );\r\n  };\r\n\r\n  const handleDrop = (e, index) => {\r\n    e.preventDefault();\r\n    const draggedLetter = e.dataTransfer.getData(\"text/plain\");\r\n\r\n    setSlots((prevSlots) => {\r\n      const newSlots = [...prevSlots];\r\n      const slot = newSlots[index];\r\n\r\n      if (slot.filled) return prevSlots; // Slot already filled\r\n\r\n      if (draggedLetter === slot.letter) {\r\n        slot.filled = true;\r\n        slot.correct = true;\r\n      } else {\r\n        slot.incorrect = true;\r\n        setTimeout(() => {\r\n          setSlots((prevSlots) => {\r\n            const updatedSlots = [...prevSlots];\r\n            updatedSlots[index].incorrect = false;\r\n            return updatedSlots;\r\n          });\r\n        }, 1000);\r\n      }\r\n      return newSlots;\r\n    });\r\n    // Use setTimeout to ensure state has updated before checking win condition\r\n    setTimeout(checkWinCondition, 0);\r\n  };\r\n\r\n  const checkWinCondition = () => {\r\n    const allFilled = slots.every((slot) => slot.filled && slot.correct);\r\n\r\n    if (allFilled) {\r\n      setScore((prevScore) => prevScore + 1);\r\n      setPopupMessage(\"+1\");\r\n      setFinalMessage(\"âœ” All Correct!\");\r\n\r\n      setTimeout(() => {\r\n        if (currentWordIndex + 1 < words.length) {\r\n          setCurrentWordIndex((prevIndex) => prevIndex + 1);\r\n        } else {\r\n          setFinalMessage(\"ðŸŽ‰ Game Completed!\");\r\n          // Assuming userName is stored in localStorage after login\r\n          const userName = localStorage.getItem(\"userName\");\r\n\r\n          if (userName) {\r\n            // Send a PUT request to update the lesson with quiz_complete = true\r\n            axios\r\n              .put(\"http://localhost:5000/api/lessons/update-lesson\", {\r\n                lessonId: \"102\",\r\n                userName: userName,\r\n                quiz_complete: true,\r\n              })\r\n              .then((response) => {\r\n                console.log(\"Lesson updated:\", response.data);\r\n              })\r\n              .catch((error) => {\r\n                console.error(\"Error updating lesson:\", error);\r\n              });\r\n          } else {\r\n            console.error(\"User is not logged in, unable to update lesson.\");\r\n          }\r\n        }\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  const renderDropSlots = () =>\r\n    slots.map((slot, index) => (\r\n      <div\r\n        key={index}\r\n        className={`drop-slot ${slot.incorrect ? \"incorrect\" : \"\"} ${\r\n          slot.filled ? \"correct\" : \"\"\r\n        }`}\r\n        onDragOver={(e) => e.preventDefault()}\r\n        onDrop={(e) => handleDrop(e, index)}\r\n      >\r\n        {slot.filled && (\r\n          <img\r\n            src={letterImages[slot.letter]}\r\n            alt={`ASL sign for ${slot.letter}`}\r\n            className=\"slot-image\"\r\n          />\r\n        )}\r\n      </div>\r\n    ));\r\n\r\n  const letterImages = {\r\n    A,\r\n    B,\r\n    C,\r\n    D,\r\n    E,\r\n    F,\r\n    G,\r\n    H,\r\n    I,\r\n    J,\r\n    K,\r\n    L,\r\n    M,\r\n    N,\r\n    O,\r\n    P,\r\n    Q,\r\n    R,\r\n    S,\r\n    T,\r\n    U,\r\n    V,\r\n    W,\r\n    X,\r\n    Y,\r\n    Z,\r\n  };\r\n\r\n  const renderASLPieces = () =>\r\n    Object.keys(letterImages).map((letter) => (\r\n      <div\r\n        key={letter}\r\n        className=\"alphabet-piece\"\r\n        draggable\r\n        onDragStart={(e) => e.dataTransfer.setData(\"text/plain\", letter)}\r\n      >\r\n        <img\r\n          src={letterImages[letter]}\r\n          alt={`ASL sign for ${letter}`}\r\n          className=\"alphabet-image\"\r\n        />\r\n      </div>\r\n    ));\r\n\r\n  return (\r\n    <div>\r\n      <header>\r\n      <h1 style={{color:'white'}}>ASL Drag-and-Drop Game</h1>\r\n        <p style={{color:'white'}}>Drag the ASL signs to the correct boxes to spell the word!</p>\r\n      </header>\r\n      <main>\r\n        <div id=\"target-word-container\">\r\n          <h2 id=\"target-word\">{currentWord}</h2>\r\n        </div>\r\n        <div id=\"game-container\">\r\n          <div id=\"drop-zone\" className=\"drop-zone\">\r\n            {renderDropSlots()}\r\n          </div>\r\n          <div id=\"alphabet-container2\" className=\"alphabet-container2\">\r\n            {renderASLPieces()}\r\n          </div>\r\n        </div>\r\n        <p id=\"feedback\" className=\"feedback\"></p>\r\n        <div id=\"score-display\">Score: {score}</div>\r\n        {popupMessage && (\r\n          <div id=\"popup\" className=\"popup\">\r\n            {popupMessage}\r\n          </div>\r\n        )}\r\n        {finalMessage && <div id=\"final-message\">{finalMessage}</div>}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Finger_Spelling;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}