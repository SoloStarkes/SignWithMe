{"ast":null,"code":"var _jsxFileName = \"/Users/brandonboston/Desktop/SignWithMe_Newest/SignWithMe_Newest/sign-with-me/src/components/UnitSet.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import axios from \"axios\"; // Import axios\n// import \"./UnitSet.css\";\n// import { CircularProgressbar } from \"react-circular-progressbar\";\n// import \"react-circular-progressbar/dist/styles.css\";\n\n// const UnitSet = () => {\n//   const [openUnit, setOpenUnit] = useState(null); // Tracks which unit dropdown is open\n//   const [openLesson, setOpenLesson] = useState(null); // Tracks which lesson dropdown is open\n//   const [quizCompletedAlpha, setquizCompletedAlpha] = useState(false); // Tracks if the quiz for lesson 101 is completed\n//   const [quizCompletedFinger, setquizCompletedFinger] = useState(false); // Tracks if the quiz for lesson 101 is completed\n//   const [quizCompletedGreetings, setquizCompletedGreetings] = useState(false); // Tracks if the quiz for lesson 101 is completed\n//   const [quizCompletedGrammer, setquizCompletedGrammer] = useState(false); // Tracks if the quiz for lesson 101 is completed\n//   const [quizCompletedNounAdj, setquizCompletedNounAdj] = useState(false); // Tracks if the quiz for lesson 101 is completed\n//   const [quizCompletedVerbColors, setquizCompletedVerbColors] = useState(false); // Tracks if the quiz for lesson 101 is completed\n\n//   // Check if the user is signed in and retrieve their username\n//   const userName = localStorage.getItem(\"userName\");\n\n//   useEffect(() => {\n//     if (userName) {\n//       // Unit 1\n//       axios\n//         .get(\"http://localhost:5001/api/lessons/get-lesson\", {\n//           params: {\n//             lessonId: \"101\", // Lesson ID to check\n//             userName: userName, // The userName from local storage\n//           },\n//         })\n//         .then((response) => {\n//           const lesson = response.data.lesson;\n//           console.log(\"Lesson Data:\", lesson); // Log the fetched lesson\n//           if (lesson && lesson.quiz_complete) {\n//             console.log(\"Quiz Completed is true!\"); // Confirm quiz status\n//             setquizCompletedAlpha(true);\n//           } else {\n//             console.log(\"Quiz Completed is false or not set.\");\n//           }\n//         })\n//         .catch((error) => {\n//           console.error(\"Error fetching lesson data:\", error);\n//         });\n\n//       axios\n//         .get(\"http://localhost:5001/api/lessons/get-lesson\", {\n//           params: {\n//             lessonId: \"102\", // Lesson ID to check\n//             userName: userName, // The userName from local storage\n//           },\n//         })\n//         .then((response) => {\n//           const lesson = response.data.lesson;\n//           console.log(\"Lesson Data:\", lesson); // Log the fetched lesson\n//           if (lesson && lesson.quiz_complete) {\n//             console.log(\"Quiz Completed is true!\"); // Confirm quiz status\n//             setquizCompletedFinger(true);\n//           } else {\n//             console.log(\"Quiz Completed is false or not set.\");\n//           }\n//         })\n//         .catch((error) => {\n//           console.error(\"Error fetching lesson data:\", error);\n//         });\n//       axios\n//         .get(\"http://localhost:5001/api/lessons/get-lesson\", {\n//           params: {\n//             lessonId: \"103\", // Lesson ID to check\n//             userName: userName, // The userName from local storage\n//           },\n//         })\n//         .then((response) => {\n//           const lesson = response.data.lesson;\n//           console.log(\"Lesson Data:\", lesson); // Log the fetched lesson\n//           if (lesson && lesson.quiz_complete) {\n//             console.log(\"Quiz Completed is true!\"); // Confirm quiz status\n//             setquizCompletedGreetings(true);\n//           } else {\n//             console.log(\"Quiz Completed is false or not set.\");\n//           }\n//         })\n//         .catch((error) => {\n//           console.error(\"Error fetching lesson data:\", error);\n//         });\n\n//       // Unit 2\n//       axios\n//         .get(\"http://localhost:5001/api/lessons/get-lesson\", {\n//           params: {\n//             lessonId: \"201\", // Lesson ID to check\n//             userName: userName, // The userName from local storage\n//           },\n//         })\n//         .then((response) => {\n//           const lesson = response.data.lesson;\n//           console.log(\"Lesson Data:\", lesson); // Log the fetched lesson\n//           if (lesson && lesson.quiz_complete) {\n//             console.log(\"Quiz Completed is true!\"); // Confirm quiz status\n//             setquizCompletedGrammer(true);\n//           } else {\n//             console.log(\"Quiz Completed is false or not set.\");\n//           }\n//         })\n//         .catch((error) => {\n//           console.error(\"Error fetching lesson data:\", error);\n//         });\n\n//       axios\n//         .get(\"http://localhost:5001/api/lessons/get-lesson\", {\n//           params: {\n//             lessonId: \"202\", // Lesson ID to check\n//             userName: userName, // The userName from local storage\n//           },\n//         })\n//         .then((response) => {\n//           const lesson = response.data.lesson;\n//           console.log(\"Lesson Data:\", lesson); // Log the fetched lesson\n//           if (lesson && lesson.quiz_complete) {\n//             console.log(\"Quiz Completed is true!\"); // Confirm quiz status\n//             setquizCompletedNounAdj(true);\n//           } else {\n//             console.log(\"Quiz Completed is false or not set.\");\n//           }\n//         })\n//         .catch((error) => {\n//           console.error(\"Error fetching lesson data:\", error);\n//         });\n\n//       axios\n//         .get(\"http://localhost:5001/api/lessons/get-lesson\", {\n//           params: {\n//             lessonId: \"203\", // Lesson ID to check\n//             userName: userName, // The userName from local storage\n//           },\n//         })\n//         .then((response) => {\n//           const lesson = response.data.lesson;\n//           console.log(\"Lesson Data:\", lesson); // Log the fetched lesson\n//           if (lesson && lesson.quiz_complete) {\n//             console.log(\"Quiz Completed is true!\"); // Confirm quiz status\n//             setquizCompletedVerbColors(true);\n//           } else {\n//             console.log(\"Quiz Completed is false or not set.\");\n//           }\n//         })\n//         .catch((error) => {\n//           console.error(\"Error fetching lesson data:\", error);\n//         });\n//     } else {\n//       setquizCompletedAlpha(false);\n//       setquizCompletedFinger(false);\n//       setquizCompletedGreetings(false);\n//       setquizCompletedGrammer(false);\n//       setquizCompletedNounAdj(false);\n//       setquizCompletedVerbColors(false);\n//     }\n//   }, [userName]);\n\n//   const toggleUnit = (unit) => {\n//     setOpenUnit(openUnit === unit ? null : unit);\n//     setOpenLesson(null); // Close any lesson dropdowns when toggling units\n//   };\n\n//   const toggleLesson = (lesson) => {\n//     setOpenLesson(openLesson === lesson ? null : lesson);\n//   };\n//   const progress = quizCompletedGreetings ? 100 : 0; // Progress is either 0% or 100%\n\n//   return (\n//     <div className=\"unitset-container\">\n//       <h1 style={{fontSize: '50px' }} >Units Dashboard</h1>\n//       <div className=\"unitset-list\">\n//         {/* Unit 1 */}\n//         <div style={{fontSize: '25px' }} >\n//           <button  onClick={() => toggleUnit(1)} className=\"unit-button\">\n//             Unit 1: Basics\n//             {quizCompletedAlpha &&\n//               quizCompletedFinger &&\n//               quizCompletedGreetings && (\n//                 <span>üèÜ</span>\n//               )}\n//           </button>\n//           {openUnit === 1 && (\n//             <div  className=\"lesson-dropdown\">\n//               <Link to=\"/units/lesson1\" className=\"lesson-link\">\n//                 Alphabet{\" \"}\n//                 {quizCompletedAlpha && (\n//                 <span>üèÜ</span>\n//               )}\n//               </Link>\n//               <Link to=\"/units/lesson2\" className=\"lesson-link\">\n//                 Finger Spelling{\" \"}\n//                 {quizCompletedFinger && (\n//                 <span>üèÜ</span>\n//                 )}\n//               </Link>\n//               <Link to=\"/units/lesson3\" className=\"lesson-link\">\n//                 Greetings{\" \"}\n//                 {quizCompletedGreetings && (\n//                   <span>üèÜ</span>\n//                 )}\n//                 <div className=\"progress-container\">\n//                   <CircularProgressbar\n//                     value={progress}\n//                     text={`${progress}%`}\n//                     styles={{\n//                       path: { stroke: quizCompletedGreetings ? \"green\" : \"red\" },\n//                       text: { fill: quizCompletedGreetings ? \"green\" : \"red\" },\n//                     }}\n//                   />\n//                 </div>\n\n//               </Link>\n//             </div>\n//           )}\n//         </div>\n//         <div style={{fontSize: '25px' }} >\n//           <button onClick={() => toggleUnit(2)} className=\"unit-button\">\n//             Unit 2: Intermediate\n//             {quizCompletedGrammer &&\n//               quizCompletedNounAdj &&\n//               quizCompletedVerbColors && (\n//                 <span style={{ color: \"green\", fontSize: \"1.5rem\" }}>‚úî</span>\n//               )}\n//           </button>\n//           {openUnit === 2 && (\n//             <div className=\"lesson-dropdown\">\n//               <Link to=\"/units/lesson4\" className=\"lesson-link\">\n//                 Grammer{\" \"}\n//                 {quizCompletedGrammer && (\n//                   <span style={{ color: \"green\", fontSize: \"1.5rem\" }}>‚úî</span>\n//                 )}\n//               </Link>\n//               <Link to=\"/units/lesson5/N_A\" className=\"lesson-link\">\n//                 Nouns and Adjectives{\" \"}\n//                 {quizCompletedNounAdj && (\n//                   <span style={{ color: \"green\", fontSize: \"1.5rem\" }}>‚úî</span>\n//                 )}\n//               </Link>\n//               <Link to=\"/units/lesson6\" className=\"lesson-link\">\n//                 Verbs and Colors{\" \"}\n//                 {quizCompletedVerbColors && (\n//                   <span style={{ color: \"green\", fontSize: \"1.5rem\" }}>‚úî</span>\n//                 )}\n//               </Link>\n//             </div>\n//           )}\n//         </div>\n\n//         {/* Unit 3 */}\n//         <div style={{fontSize: '25px' }} >\n//           <button onClick={() => toggleUnit(3)} className=\"unit-button\">\n//             Unit 3: Advanced\n//           </button>\n//           {openUnit === 3 && (\n//             <div className=\"lesson-dropdown\">\n//               <Link to=\"/units/lesson7\" className=\"lesson-link\">\n//                 Numbers{\" \"}\n//                 {/* {quizCompletedAlpha && (\n//                   <span style={{ color: \"green\", fontSize: \"1.5rem\" }}>‚úî</span>\n//                 )} */}\n//               </Link>\n\n//             </div>\n//           )}\n//         </div>\n\n//         {/* Final */}\n//         <div style={{fontSize: '25px' }}>\n//           <button onClick={() => toggleUnit(4)} className=\"unit-button\">\n//             Final Examination\n//           </button>\n//           {openUnit === 4 && (\n//             <div className=\"lesson-dropdown\">\n//               <Link to=\"/units/Final\" className=\"lesson-link\">\n//                 Final Exam{\" \"}\n//               {quizCompletedAlpha && (\n//                 <span style={{ color: \"green\", fontSize: \"1.5rem\" }}>‚úî</span>\n//               )}\n//             </Link>\n\n//           </div>\n//         )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default UnitSet;\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./UnitSet.css\";\nimport { CircularProgressbar } from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UnitSet = () => {\n  _s();\n  const [openUnit, setOpenUnit] = useState(null);\n  const [quizStatus, setQuizStatus] = useState({\n    alpha: false,\n    finger: false,\n    greetings: false,\n    grammar: false,\n    nounAdj: false,\n    verbColors: false\n  });\n  const userName = localStorage.getItem(\"userName\");\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchQuizStatus = async (lessonId, key) => {\n      try {\n        var _response$data$lesson;\n        const response = await axios.get(\"http://localhost:5001/api/lessons/get-lesson\", {\n          params: {\n            lessonId,\n            userName\n          }\n        });\n        if ((_response$data$lesson = response.data.lesson) !== null && _response$data$lesson !== void 0 && _response$data$lesson.quiz_complete) {\n          setQuizStatus(prev => ({\n            ...prev,\n            [key]: true\n          }));\n        }\n      } catch (error) {\n        console.error(`Error fetching data for lesson ${lessonId}:`, error);\n      }\n    };\n    if (userName) {\n      fetchQuizStatus(\"101\", \"alpha\");\n      fetchQuizStatus(\"102\", \"finger\");\n      fetchQuizStatus(\"103\", \"greetings\");\n      fetchQuizStatus(\"201\", \"grammar\");\n      fetchQuizStatus(\"202\", \"nounAdj\");\n      fetchQuizStatus(\"203\", \"verbColors\");\n    }\n  }, [userName]);\n  const toggleUnit = unit => {\n    setOpenUnit(openUnit === unit ? null : unit);\n  };\n  const handleNavigate = path => {\n    navigate(path);\n  };\n  const progress = quizStatus.greetings ? 100 : 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"unitset-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        fontSize: \"50px\"\n      },\n      children: \"Units Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"unitset-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: \"25px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => toggleUnit(1),\n          className: \"unit-button\",\n          children: [\"Unit 1: Basics\", quizStatus.alpha && quizStatus.finger && quizStatus.greetings && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83C\\uDFC6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 79\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this), openUnit === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lesson-dropdown\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lesson-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Alphabet \", quizStatus.alpha && /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"\\uD83C\\uDFC6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 51\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleNavigate(\"/units/lesson1\"),\n              className: \"lesson-button\",\n              children: \"Go to Lesson\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lesson-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Finger   Spelling\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleNavigate(\"/units/lesson2\"),\n              className: \"lesson-button\",\n              children: \"Go to Lesson\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 17\n            }, this), quizStatus.finger && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uD83C\\uDFC6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lesson-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Greetings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleNavigate(\"/units/lesson3\"),\n              className: \"lesson-button\",\n              children: \"Go to Lesson\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 17\n            }, this), quizStatus.greetings && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uD83C\\uDFC6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 42\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-container\",\n              children: /*#__PURE__*/_jsxDEV(CircularProgressbar, {\n                value: progress,\n                text: `${progress}%`,\n                styles: {\n                  path: {\n                    stroke: quizStatus.greetings ? \"green\" : \"red\"\n                  },\n                  text: {\n                    fill: quizStatus.greetings ? \"green\" : \"red\"\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: \"25px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => toggleUnit(2),\n          className: \"unit-button\",\n          children: [\"Unit 2: Intermediate\", quizStatus.grammar && quizStatus.nounAdj && quizStatus.verbColors && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u2714\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 83\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }, this), openUnit === 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lesson-dropdown\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lesson-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Grammar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleNavigate(\"/units/lesson4\"),\n              className: \"lesson-button\",\n              children: \"Go to Lesson\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 17\n            }, this), quizStatus.grammar && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u2714\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 40\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lesson-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Nouns and Adjectives\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleNavigate(\"/units/lesson5/N_A\"),\n              className: \"lesson-button\",\n              children: \"Go to Lesson\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 17\n            }, this), quizStatus.nounAdj && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u2714\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 40\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lesson-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Verbs and Colors\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleNavigate(\"/units/lesson6\"),\n              className: \"lesson-button\",\n              children: \"Go to Lesson\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 17\n            }, this), quizStatus.verbColors && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u2714\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 43\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: \"25px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => toggleUnit(3),\n          className: \"unit-button\",\n          children: \"Unit 3: Advanced\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }, this), openUnit === 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lesson-dropdown\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lesson-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Numbers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleNavigate(\"/units/lesson7\"),\n              className: \"lesson-button\",\n              children: \"Go to Lesson\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: \"25px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => toggleUnit(4),\n          className: \"unit-button\",\n          children: \"Final Examination\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 11\n        }, this), openUnit === 4 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lesson-dropdown\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lesson-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Final Exam\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleNavigate(\"/units/Final\"),\n              className: \"lesson-button\",\n              children: \"Go to Lesson\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 349,\n    columnNumber: 5\n  }, this);\n};\n_s(UnitSet, \"ZeqBTU7cc89R398DFRRB5CStI90=\", false, function () {\n  return [useNavigate];\n});\n_c = UnitSet;\nexport default UnitSet;\nvar _c;\n$RefreshReg$(_c, \"UnitSet\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","axios","CircularProgressbar","jsxDEV","_jsxDEV","UnitSet","_s","openUnit","setOpenUnit","quizStatus","setQuizStatus","alpha","finger","greetings","grammar","nounAdj","verbColors","userName","localStorage","getItem","navigate","fetchQuizStatus","lessonId","key","_response$data$lesson","response","get","params","data","lesson","quiz_complete","prev","error","console","toggleUnit","unit","handleNavigate","path","progress","className","children","style","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","text","styles","stroke","fill","_c","$RefreshReg$"],"sources":["/Users/brandonboston/Desktop/SignWithMe_Newest/SignWithMe_Newest/sign-with-me/src/components/UnitSet.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n// import axios from \"axios\"; // Import axios\r\n// import \"./UnitSet.css\";\r\n// import { CircularProgressbar } from \"react-circular-progressbar\";\r\n// import \"react-circular-progressbar/dist/styles.css\";\r\n\r\n\r\n// const UnitSet = () => {\r\n//   const [openUnit, setOpenUnit] = useState(null); // Tracks which unit dropdown is open\r\n//   const [openLesson, setOpenLesson] = useState(null); // Tracks which lesson dropdown is open\r\n//   const [quizCompletedAlpha, setquizCompletedAlpha] = useState(false); // Tracks if the quiz for lesson 101 is completed\r\n//   const [quizCompletedFinger, setquizCompletedFinger] = useState(false); // Tracks if the quiz for lesson 101 is completed\r\n//   const [quizCompletedGreetings, setquizCompletedGreetings] = useState(false); // Tracks if the quiz for lesson 101 is completed\r\n//   const [quizCompletedGrammer, setquizCompletedGrammer] = useState(false); // Tracks if the quiz for lesson 101 is completed\r\n//   const [quizCompletedNounAdj, setquizCompletedNounAdj] = useState(false); // Tracks if the quiz for lesson 101 is completed\r\n//   const [quizCompletedVerbColors, setquizCompletedVerbColors] = useState(false); // Tracks if the quiz for lesson 101 is completed\r\n\r\n//   // Check if the user is signed in and retrieve their username\r\n//   const userName = localStorage.getItem(\"userName\");\r\n\r\n//   useEffect(() => {\r\n//     if (userName) {\r\n//       // Unit 1\r\n//       axios\r\n//         .get(\"http://localhost:5001/api/lessons/get-lesson\", {\r\n//           params: {\r\n//             lessonId: \"101\", // Lesson ID to check\r\n//             userName: userName, // The userName from local storage\r\n//           },\r\n//         })\r\n//         .then((response) => {\r\n//           const lesson = response.data.lesson;\r\n//           console.log(\"Lesson Data:\", lesson); // Log the fetched lesson\r\n//           if (lesson && lesson.quiz_complete) {\r\n//             console.log(\"Quiz Completed is true!\"); // Confirm quiz status\r\n//             setquizCompletedAlpha(true);\r\n//           } else {\r\n//             console.log(\"Quiz Completed is false or not set.\");\r\n//           }\r\n//         })\r\n//         .catch((error) => {\r\n//           console.error(\"Error fetching lesson data:\", error);\r\n//         });\r\n\r\n//       axios\r\n//         .get(\"http://localhost:5001/api/lessons/get-lesson\", {\r\n//           params: {\r\n//             lessonId: \"102\", // Lesson ID to check\r\n//             userName: userName, // The userName from local storage\r\n//           },\r\n//         })\r\n//         .then((response) => {\r\n//           const lesson = response.data.lesson;\r\n//           console.log(\"Lesson Data:\", lesson); // Log the fetched lesson\r\n//           if (lesson && lesson.quiz_complete) {\r\n//             console.log(\"Quiz Completed is true!\"); // Confirm quiz status\r\n//             setquizCompletedFinger(true);\r\n//           } else {\r\n//             console.log(\"Quiz Completed is false or not set.\");\r\n//           }\r\n//         })\r\n//         .catch((error) => {\r\n//           console.error(\"Error fetching lesson data:\", error);\r\n//         });\r\n//       axios\r\n//         .get(\"http://localhost:5001/api/lessons/get-lesson\", {\r\n//           params: {\r\n//             lessonId: \"103\", // Lesson ID to check\r\n//             userName: userName, // The userName from local storage\r\n//           },\r\n//         })\r\n//         .then((response) => {\r\n//           const lesson = response.data.lesson;\r\n//           console.log(\"Lesson Data:\", lesson); // Log the fetched lesson\r\n//           if (lesson && lesson.quiz_complete) {\r\n//             console.log(\"Quiz Completed is true!\"); // Confirm quiz status\r\n//             setquizCompletedGreetings(true);\r\n//           } else {\r\n//             console.log(\"Quiz Completed is false or not set.\");\r\n//           }\r\n//         })\r\n//         .catch((error) => {\r\n//           console.error(\"Error fetching lesson data:\", error);\r\n//         });\r\n\r\n//       // Unit 2\r\n//       axios\r\n//         .get(\"http://localhost:5001/api/lessons/get-lesson\", {\r\n//           params: {\r\n//             lessonId: \"201\", // Lesson ID to check\r\n//             userName: userName, // The userName from local storage\r\n//           },\r\n//         })\r\n//         .then((response) => {\r\n//           const lesson = response.data.lesson;\r\n//           console.log(\"Lesson Data:\", lesson); // Log the fetched lesson\r\n//           if (lesson && lesson.quiz_complete) {\r\n//             console.log(\"Quiz Completed is true!\"); // Confirm quiz status\r\n//             setquizCompletedGrammer(true);\r\n//           } else {\r\n//             console.log(\"Quiz Completed is false or not set.\");\r\n//           }\r\n//         })\r\n//         .catch((error) => {\r\n//           console.error(\"Error fetching lesson data:\", error);\r\n//         });\r\n\r\n//       axios\r\n//         .get(\"http://localhost:5001/api/lessons/get-lesson\", {\r\n//           params: {\r\n//             lessonId: \"202\", // Lesson ID to check\r\n//             userName: userName, // The userName from local storage\r\n//           },\r\n//         })\r\n//         .then((response) => {\r\n//           const lesson = response.data.lesson;\r\n//           console.log(\"Lesson Data:\", lesson); // Log the fetched lesson\r\n//           if (lesson && lesson.quiz_complete) {\r\n//             console.log(\"Quiz Completed is true!\"); // Confirm quiz status\r\n//             setquizCompletedNounAdj(true);\r\n//           } else {\r\n//             console.log(\"Quiz Completed is false or not set.\");\r\n//           }\r\n//         })\r\n//         .catch((error) => {\r\n//           console.error(\"Error fetching lesson data:\", error);\r\n//         });\r\n\r\n//       axios\r\n//         .get(\"http://localhost:5001/api/lessons/get-lesson\", {\r\n//           params: {\r\n//             lessonId: \"203\", // Lesson ID to check\r\n//             userName: userName, // The userName from local storage\r\n//           },\r\n//         })\r\n//         .then((response) => {\r\n//           const lesson = response.data.lesson;\r\n//           console.log(\"Lesson Data:\", lesson); // Log the fetched lesson\r\n//           if (lesson && lesson.quiz_complete) {\r\n//             console.log(\"Quiz Completed is true!\"); // Confirm quiz status\r\n//             setquizCompletedVerbColors(true);\r\n//           } else {\r\n//             console.log(\"Quiz Completed is false or not set.\");\r\n//           }\r\n//         })\r\n//         .catch((error) => {\r\n//           console.error(\"Error fetching lesson data:\", error);\r\n//         });\r\n//     } else {\r\n//       setquizCompletedAlpha(false);\r\n//       setquizCompletedFinger(false);\r\n//       setquizCompletedGreetings(false);\r\n//       setquizCompletedGrammer(false);\r\n//       setquizCompletedNounAdj(false);\r\n//       setquizCompletedVerbColors(false);\r\n//     }\r\n//   }, [userName]);\r\n\r\n//   const toggleUnit = (unit) => {\r\n//     setOpenUnit(openUnit === unit ? null : unit);\r\n//     setOpenLesson(null); // Close any lesson dropdowns when toggling units\r\n//   };\r\n\r\n//   const toggleLesson = (lesson) => {\r\n//     setOpenLesson(openLesson === lesson ? null : lesson);\r\n//   };\r\n//   const progress = quizCompletedGreetings ? 100 : 0; // Progress is either 0% or 100%\r\n\r\n//   return (\r\n//     <div className=\"unitset-container\">\r\n//       <h1 style={{fontSize: '50px' }} >Units Dashboard</h1>\r\n//       <div className=\"unitset-list\">\r\n//         {/* Unit 1 */}\r\n//         <div style={{fontSize: '25px' }} >\r\n//           <button  onClick={() => toggleUnit(1)} className=\"unit-button\">\r\n//             Unit 1: Basics\r\n//             {quizCompletedAlpha &&\r\n//               quizCompletedFinger &&\r\n//               quizCompletedGreetings && (\r\n//                 <span>üèÜ</span>\r\n//               )}\r\n//           </button>\r\n//           {openUnit === 1 && (\r\n//             <div  className=\"lesson-dropdown\">\r\n//               <Link to=\"/units/lesson1\" className=\"lesson-link\">\r\n//                 Alphabet{\" \"}\r\n//                 {quizCompletedAlpha && (\r\n//                 <span>üèÜ</span>\r\n//               )}\r\n//               </Link>\r\n//               <Link to=\"/units/lesson2\" className=\"lesson-link\">\r\n//                 Finger Spelling{\" \"}\r\n//                 {quizCompletedFinger && (\r\n//                 <span>üèÜ</span>\r\n//                 )}\r\n//               </Link>\r\n//               <Link to=\"/units/lesson3\" className=\"lesson-link\">\r\n//                 Greetings{\" \"}\r\n//                 {quizCompletedGreetings && (\r\n//                   <span>üèÜ</span>\r\n//                 )}\r\n//                 <div className=\"progress-container\">\r\n//                   <CircularProgressbar\r\n//                     value={progress}\r\n//                     text={`${progress}%`}\r\n//                     styles={{\r\n//                       path: { stroke: quizCompletedGreetings ? \"green\" : \"red\" },\r\n//                       text: { fill: quizCompletedGreetings ? \"green\" : \"red\" },\r\n//                     }}\r\n//                   />\r\n//                 </div>\r\n\r\n\r\n//               </Link>\r\n//             </div>\r\n//           )}\r\n//         </div>\r\n//         <div style={{fontSize: '25px' }} >\r\n//           <button onClick={() => toggleUnit(2)} className=\"unit-button\">\r\n//             Unit 2: Intermediate\r\n//             {quizCompletedGrammer &&\r\n//               quizCompletedNounAdj &&\r\n//               quizCompletedVerbColors && (\r\n//                 <span style={{ color: \"green\", fontSize: \"1.5rem\" }}>‚úî</span>\r\n//               )}\r\n//           </button>\r\n//           {openUnit === 2 && (\r\n//             <div className=\"lesson-dropdown\">\r\n//               <Link to=\"/units/lesson4\" className=\"lesson-link\">\r\n//                 Grammer{\" \"}\r\n//                 {quizCompletedGrammer && (\r\n//                   <span style={{ color: \"green\", fontSize: \"1.5rem\" }}>‚úî</span>\r\n//                 )}\r\n//               </Link>\r\n//               <Link to=\"/units/lesson5/N_A\" className=\"lesson-link\">\r\n//                 Nouns and Adjectives{\" \"}\r\n//                 {quizCompletedNounAdj && (\r\n//                   <span style={{ color: \"green\", fontSize: \"1.5rem\" }}>‚úî</span>\r\n//                 )}\r\n//               </Link>\r\n//               <Link to=\"/units/lesson6\" className=\"lesson-link\">\r\n//                 Verbs and Colors{\" \"}\r\n//                 {quizCompletedVerbColors && (\r\n//                   <span style={{ color: \"green\", fontSize: \"1.5rem\" }}>‚úî</span>\r\n//                 )}\r\n//               </Link>\r\n//             </div>\r\n//           )}\r\n//         </div>\r\n\r\n//         {/* Unit 3 */}\r\n//         <div style={{fontSize: '25px' }} >\r\n//           <button onClick={() => toggleUnit(3)} className=\"unit-button\">\r\n//             Unit 3: Advanced\r\n//           </button>\r\n//           {openUnit === 3 && (\r\n//             <div className=\"lesson-dropdown\">\r\n//               <Link to=\"/units/lesson7\" className=\"lesson-link\">\r\n//                 Numbers{\" \"}\r\n//                 {/* {quizCompletedAlpha && (\r\n//                   <span style={{ color: \"green\", fontSize: \"1.5rem\" }}>‚úî</span>\r\n//                 )} */}\r\n//               </Link>\r\n              \r\n//             </div>\r\n//           )}\r\n//         </div>\r\n\r\n//         {/* Final */}\r\n//         <div style={{fontSize: '25px' }}>\r\n//           <button onClick={() => toggleUnit(4)} className=\"unit-button\">\r\n//             Final Examination\r\n//           </button>\r\n//           {openUnit === 4 && (\r\n//             <div className=\"lesson-dropdown\">\r\n//               <Link to=\"/units/Final\" className=\"lesson-link\">\r\n//                 Final Exam{\" \"}\r\n//               {quizCompletedAlpha && (\r\n//                 <span style={{ color: \"green\", fontSize: \"1.5rem\" }}>‚úî</span>\r\n//               )}\r\n//             </Link>\r\n      \r\n//           </div>\r\n//         )}\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default UnitSet;\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./UnitSet.css\";\r\nimport { CircularProgressbar } from \"react-circular-progressbar\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\n\r\nconst UnitSet = () => {\r\n  const [openUnit, setOpenUnit] = useState(null);\r\n  const [quizStatus, setQuizStatus] = useState({\r\n    alpha: false,\r\n    finger: false,\r\n    greetings: false,\r\n    grammar: false,\r\n    nounAdj: false,\r\n    verbColors: false,\r\n  });\r\n\r\n  const userName = localStorage.getItem(\"userName\");\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchQuizStatus = async (lessonId, key) => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5001/api/lessons/get-lesson\", {\r\n          params: { lessonId, userName },\r\n        });\r\n        if (response.data.lesson?.quiz_complete) {\r\n          setQuizStatus((prev) => ({ ...prev, [key]: true }));\r\n        }\r\n      } catch (error) {\r\n        console.error(`Error fetching data for lesson ${lessonId}:`, error);\r\n      }\r\n    };\r\n\r\n    if (userName) {\r\n      fetchQuizStatus(\"101\", \"alpha\");\r\n      fetchQuizStatus(\"102\", \"finger\");\r\n      fetchQuizStatus(\"103\", \"greetings\");\r\n      fetchQuizStatus(\"201\", \"grammar\");\r\n      fetchQuizStatus(\"202\", \"nounAdj\");\r\n      fetchQuizStatus(\"203\", \"verbColors\");\r\n    }\r\n  }, [userName]);\r\n\r\n  const toggleUnit = (unit) => {\r\n    setOpenUnit(openUnit === unit ? null : unit);\r\n  };\r\n\r\n  const handleNavigate = (path) => {\r\n    navigate(path);\r\n  };\r\n\r\n  const progress = quizStatus.greetings ? 100 : 0;\r\n\r\n  return (\r\n    <div className=\"unitset-container\">\r\n      <h1 style={{ fontSize: \"50px\" }}>Units Dashboard</h1>\r\n      <div className=\"unitset-list\">\r\n        {/* Unit 1 */}\r\n        <div style={{ fontSize: \"25px\" }}>\r\n          <button onClick={() => toggleUnit(1)} className=\"unit-button\">\r\n            Unit 1: Basics\r\n            {quizStatus.alpha && quizStatus.finger && quizStatus.greetings && <span>üèÜ</span>}\r\n          </button>\r\n          {openUnit === 1 && (\r\n            <div className=\"lesson-dropdown\">\r\n              <div className=\"lesson-container\">\r\n                <h3>Alphabet {quizStatus.alpha && <span>üèÜ</span>}\r\n                 </h3>\r\n                <button onClick={() => handleNavigate(\"/units/lesson1\")} className=\"lesson-button\">\r\n                  Go to Lesson\r\n                </button>\r\n              </div>\r\n              <div className=\"lesson-container\">\r\n                <h3>Finger   Spelling</h3>\r\n                <button onClick={() => handleNavigate(\"/units/lesson2\")} className=\"lesson-button\">\r\n                  Go to Lesson\r\n                </button>\r\n                {quizStatus.finger && <span>üèÜ</span>}\r\n              </div>\r\n              <div className=\"lesson-container\">\r\n                <h3>Greetings</h3>\r\n                <button onClick={() => handleNavigate(\"/units/lesson3\")} className=\"lesson-button\">\r\n                  Go to Lesson\r\n                </button>\r\n                {quizStatus.greetings && <span>üèÜ</span>}\r\n                <div className=\"progress-container\">\r\n                  <CircularProgressbar\r\n                    value={progress}\r\n                    text={`${progress}%`}\r\n                    styles={{\r\n                      path: { stroke: quizStatus.greetings ? \"green\" : \"red\" },\r\n                      text: { fill: quizStatus.greetings ? \"green\" : \"red\" },\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Unit 2 */}\r\n        <div style={{ fontSize: \"25px\" }}>\r\n          <button onClick={() => toggleUnit(2)} className=\"unit-button\">\r\n            Unit 2: Intermediate\r\n            {quizStatus.grammar && quizStatus.nounAdj && quizStatus.verbColors && <span>‚úî</span>}\r\n          </button>\r\n          {openUnit === 2 && (\r\n            <div className=\"lesson-dropdown\">\r\n              <div className=\"lesson-container\">\r\n                <h3>Grammar</h3>\r\n                <button onClick={() => handleNavigate(\"/units/lesson4\")} className=\"lesson-button\">\r\n                  Go to Lesson\r\n                </button>\r\n                {quizStatus.grammar && <span>‚úî</span>}\r\n              </div>\r\n              <div className=\"lesson-container\">\r\n                <h3>Nouns and Adjectives</h3>\r\n                <button onClick={() => handleNavigate(\"/units/lesson5/N_A\")} className=\"lesson-button\">\r\n                  Go to Lesson\r\n                </button>\r\n                {quizStatus.nounAdj && <span>‚úî</span>}\r\n              </div>\r\n              <div className=\"lesson-container\">\r\n                <h3>Verbs and Colors</h3>\r\n                <button onClick={() => handleNavigate(\"/units/lesson6\")} className=\"lesson-button\">\r\n                  Go to Lesson\r\n                </button>\r\n                {quizStatus.verbColors && <span>‚úî</span>}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Unit 3 */}\r\n        <div style={{ fontSize: \"25px\" }}>\r\n          <button onClick={() => toggleUnit(3)} className=\"unit-button\">\r\n            Unit 3: Advanced\r\n          </button>\r\n          {openUnit === 3 && (\r\n            <div className=\"lesson-dropdown\">\r\n              <div className=\"lesson-container\">\r\n                <h3>Numbers</h3>\r\n                <button onClick={() => handleNavigate(\"/units/lesson7\")} className=\"lesson-button\">\r\n                  Go to Lesson\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Final */}\r\n        <div style={{ fontSize: \"25px\" }}>\r\n          <button onClick={() => toggleUnit(4)} className=\"unit-button\">\r\n            Final Examination\r\n          </button>\r\n          {openUnit === 4 && (\r\n            <div className=\"lesson-dropdown\">\r\n              <div className=\"lesson-container\">\r\n                <h3>Final Exam</h3>\r\n                <button onClick={() => handleNavigate(\"/units/Final\")} className=\"lesson-button\">\r\n                  Go to Lesson\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UnitSet;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}