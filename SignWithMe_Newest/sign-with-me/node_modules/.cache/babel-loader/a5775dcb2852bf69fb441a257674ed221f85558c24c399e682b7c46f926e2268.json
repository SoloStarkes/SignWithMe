{"ast":null,"code":"var _jsxFileName = \"/Users/brandonboston/Desktop/SignWithMe/SignWithMe_Newest/sign-with-me/src/components/Noun_Assignment_1.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\"; // Import if using react-router-dom\nimport \"./N_Assignment1.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DragAndDropASL = () => {\n  _s();\n  const nouns = [{\n    name: \"HOME\",\n    image: \"https://media.giphy.com/media/3o7TKqKtZG1bnbVyhi/giphy.gif\"\n  }, {\n    name: \"DOG\",\n    image: \"https://media.giphy.com/media/l0HlBGjKUV8KJxDoc/giphy.gif\"\n  }, {\n    name: \"CAT\",\n    image: \"https://media.giphy.com/media/LI7i6crQp5ffHyrosY/giphy.gif\"\n  }];\n  const [currentNoun, setCurrentNoun] = useState(0);\n  const [feedback, setFeedback] = useState(\"\");\n  const [droppedWord, setDroppedWord] = useState(\"\");\n  const [isCompleted, setIsCompleted] = useState(false);\n  useEffect(() => {\n    setFeedback(\"\");\n  }, [currentNoun]);\n  const handleDragStart = (event, word) => {\n    event.dataTransfer.setData(\"text/plain\", word);\n  };\n  const handleDrop = event => {\n    event.preventDefault();\n    const droppedWord = event.dataTransfer.getData(\"text/plain\");\n    setDroppedWord(droppedWord);\n    checkSentence(droppedWord);\n  };\n  const handleDragOver = event => {\n    event.preventDefault();\n  };\n  const checkSentence = selectedWord => {\n    const correctWord = nouns[currentNoun].name;\n    if (selectedWord === correctWord) {\n      setFeedback(\"Great job! Moving to the next sign.\");\n      if (currentNoun + 1 < nouns.length) {\n        setCurrentNoun(currentNoun + 1);\n      } else {\n        setFeedback(\"You've completed all the signs!\");\n        setIsCompleted(true);\n      }\n    } else {\n      setFeedback(\"Try again!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Drag and Drop: Match the ASL Sign\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/units/lesson5/N_A\",\n      className: \"Back_Button\",\n      style: {\n        marginRight: \"10px\",\n        textDecoration: \"none\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Go to Noun Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"image-container\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: nouns[currentNoun].image,\n        alt: nouns[currentNoun].name,\n        id: \"current-noun-image\",\n        style: {\n          width: \"700px\",\n          height: \"400px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"drag-words\",\n      children: nouns.map(noun => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"word\",\n        draggable: true,\n        onDragStart: event => handleDragStart(event, noun.name),\n        children: noun.name\n      }, noun.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"drop-noun\",\n      onDrop: handleDrop,\n      onDragOver: handleDragOver,\n      style: {\n        border: \"1px solid #ccc\",\n        padding: \"20px\",\n        textAlign: \"center\",\n        marginTop: \"20px\"\n      },\n      children: droppedWord || \"[Drop Noun Here]\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"feedback\",\n      children: feedback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), isCompleted && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/units\",\n        style: {\n          textDecoration: \"none\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Back to Units Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(DragAndDropASL, \"/F9UcNWeygM+fzSm63Klib9EU3U=\");\n_c = DragAndDropASL;\nexport default DragAndDropASL;\nvar _c;\n$RefreshReg$(_c, \"DragAndDropASL\");","map":{"version":3,"names":["React","useState","useEffect","Link","jsxDEV","_jsxDEV","DragAndDropASL","_s","nouns","name","image","currentNoun","setCurrentNoun","feedback","setFeedback","droppedWord","setDroppedWord","isCompleted","setIsCompleted","handleDragStart","event","word","dataTransfer","setData","handleDrop","preventDefault","getData","checkSentence","handleDragOver","selectedWord","correctWord","length","children","fileName","_jsxFileName","lineNumber","columnNumber","to","className","style","marginRight","textDecoration","id","src","alt","width","height","map","noun","draggable","onDragStart","onDrop","onDragOver","border","padding","textAlign","marginTop","href","_c","$RefreshReg$"],"sources":["/Users/brandonboston/Desktop/SignWithMe/SignWithMe_Newest/sign-with-me/src/components/Noun_Assignment_1.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\"; // Import if using react-router-dom\nimport \"./N_Assignment1.css\";\n\nconst DragAndDropASL = () => {\n  const nouns = [\n    {\n      name: \"HOME\",\n      image: \"https://media.giphy.com/media/3o7TKqKtZG1bnbVyhi/giphy.gif\",\n    },\n    {\n      name: \"DOG\",\n      image: \"https://media.giphy.com/media/l0HlBGjKUV8KJxDoc/giphy.gif\",\n    },\n    {\n      name: \"CAT\",\n      image: \"https://media.giphy.com/media/LI7i6crQp5ffHyrosY/giphy.gif\",\n    },\n  ];\n\n  const [currentNoun, setCurrentNoun] = useState(0);\n  const [feedback, setFeedback] = useState(\"\");\n  const [droppedWord, setDroppedWord] = useState(\"\");\n  const [isCompleted, setIsCompleted] = useState(false);\n\n  useEffect(() => {\n    setFeedback(\"\");\n  }, [currentNoun]);\n\n  const handleDragStart = (event, word) => {\n    event.dataTransfer.setData(\"text/plain\", word);\n  };\n\n  const handleDrop = (event) => {\n    event.preventDefault();\n    const droppedWord = event.dataTransfer.getData(\"text/plain\");\n    setDroppedWord(droppedWord);\n    checkSentence(droppedWord);\n  };\n\n  const handleDragOver = (event) => {\n    event.preventDefault();\n  };\n\n  const checkSentence = (selectedWord) => {\n    const correctWord = nouns[currentNoun].name;\n    if (selectedWord === correctWord) {\n      setFeedback(\"Great job! Moving to the next sign.\");\n      if (currentNoun + 1 < nouns.length) {\n        setCurrentNoun(currentNoun + 1);\n      } else {\n        setFeedback(\"You've completed all the signs!\");\n        setIsCompleted(true);\n      }\n    } else {\n      setFeedback(\"Try again!\");\n    }\n  };\n\n  return (\n    <div>\n      <h1>Drag and Drop: Match the ASL Sign</h1>\n      <Link\n        to=\"/units/lesson5/N_A\"\n        className=\"Back_Button\"\n        style={{ marginRight: \"10px\", textDecoration: \"none\" }}\n      >\n        <button>Go to Noun Page</button>\n      </Link>\n\n      <div id=\"image-container\">\n        <img\n          src={nouns[currentNoun].image}\n          alt={nouns[currentNoun].name}\n          id=\"current-noun-image\"\n          style={{ width: \"700px\", height: \"400px\" }}\n        />\n      </div>\n      <div id=\"drag-words\">\n        {nouns.map((noun) => (\n          <div\n            key={noun.name}\n            className=\"word\"\n            draggable\n            onDragStart={(event) => handleDragStart(event, noun.name)}\n          >\n            {noun.name}\n          </div>\n        ))}\n      </div>\n      <div\n        id=\"drop-noun\"\n        onDrop={handleDrop}\n        onDragOver={handleDragOver}\n        style={{\n          border: \"1px solid #ccc\",\n          padding: \"20px\",\n          textAlign: \"center\",\n          marginTop: \"20px\",\n        }}\n      >\n        {droppedWord || \"[Drop Noun Here]\"}\n      </div>\n\n      <p id=\"feedback\">{feedback}</p>\n\n      {isCompleted && (\n        <div style={{ marginTop: \"20px\" }}>\n          {/* Using react-router-dom Link */}\n          {/* Standard <a> tag for external links */}\n          <a href=\"/units\" style={{ textDecoration: \"none\" }}>\n            <button>Back to Units Page</button>\n          </a>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DragAndDropASL;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}